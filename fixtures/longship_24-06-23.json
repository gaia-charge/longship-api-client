{
    "openapi": "3.0.1",
    "info": {
        "title": "Longship API",
        "description": "Longship API for custom integrations.",
        "termsOfService": "https://www.longship.io/terms",
        "contact": {
            "name": "Longship.IO",
            "url": "https://longship.freshdesk.com/support/tickets/new",
            "email": "support@longship.io"
        },
        "license": {
            "name": "MIT",
            "url": "http://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.longship.io"
        }
    ],
    "paths": {
        "/v1/sessions/{id}": {
            "get": {
                "tags": [
                    "sessions"
                ],
                "summary": "Gets the session.",
                "description": "Gets the session base on the id.",
                "operationId": "SessionGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sessionDto"
                                },
                                "example": {
                                    "id": "string",
                                    "tenantId": "string",
                                    "chargePointId": "string",
                                    "transactionId": 0,
                                    "ocppTransactionId": "string",
                                    "connectorId": 0,
                                    "sessionLocation": {
                                        "id": "string",
                                        "evseId": "string",
                                        "powerType": "AC_1_PHASE",
                                        "country_code": "string",
                                        "party_id": "string",
                                        "name": "string",
                                        "houseNumber": "string",
                                        "street": "string",
                                        "city": "string",
                                        "postal_code": "string",
                                        "state": "string",
                                        "country": "string",
                                        "hotline_phonenumber": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "time_zone": "string",
                                        "hasReimbursement": true
                                    },
                                    "idTag": "string",
                                    "startedByInfo": {
                                        "tokenInfo": {
                                            "uid": "string",
                                            "authReference": "string",
                                            "tokenType": "AD_HOC_USER",
                                            "contractId": "string",
                                            "authMethod": "AUTH_REQUEST",
                                            "providerCountryCode": "string",
                                            "providerPartyId": "string",
                                            "tokenOUId": "string",
                                            "tokenOUName": "string",
                                            "tokenOU": "string"
                                        },
                                        "roamingPlatformType": "Hubject",
                                        "authorizationState": "ApprovedByRemote",
                                        "roamingPlatformConnectionId": "string",
                                        "isGuestUsage": true
                                    },
                                    "meterStartInWh": 0,
                                    "sessionStart": "string",
                                    "chargingPeriods": [
                                        {
                                            "timestamp": "string",
                                            "deltaKwh": 0,
                                            "absoluteKwh": 0,
                                            "price": 0
                                        }
                                    ],
                                    "chargingMeterValues": [
                                        {
                                            "timestamp": "string",
                                            "value": "string",
                                            "measurand": "Energy.Active.Export.Register",
                                            "unit": "Wh"
                                        }
                                    ],
                                    "meterStopInWh": 0,
                                    "sessionStop": "string",
                                    "status": "ACTIVE",
                                    "totalEnergyInKwh": 0,
                                    "totalPrice": 0,
                                    "created": "string",
                                    "lastUpdated": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string",
                                    "tariffInfo": {
                                        "tariffId": "string",
                                        "tariffName": "string",
                                        "startTariff": 0,
                                        "tariffPrice": 0,
                                        "parkingTariff": 0,
                                        "parkingStepSizeInMinutes": 0,
                                        "parkingGracePeriodInMinutes": 0,
                                        "timeTariff": 0,
                                        "timeStepSizeInMinutes": 0,
                                        "timeGracePeriodInMinutes": 0,
                                        "assertions": [
                                            {
                                                "tariffType": "ReimbursementTariff",
                                                "isTariffUsed": true,
                                                "tariffResult": "string"
                                            }
                                        ]
                                    },
                                    "priceInfo": {
                                        "startPrice": 0,
                                        "energyPrice": 0,
                                        "totalParkingTimeInMinutes": 0,
                                        "totalParkingTimeSteps": 0,
                                        "parkingTimePrice": 0,
                                        "totalChargingTimeInMinutes": 0,
                                        "totalChargingTimeSteps": 0,
                                        "chargingTimePrice": 0,
                                        "totalPrice": 0
                                    },
                                    "tariffId": "string",
                                    "tariffName": "string",
                                    "startTariff": 0,
                                    "tariffPrice": 0,
                                    "parkingTariff": 0,
                                    "parkingStepSize": 0,
                                    "delayInMinutes": 0
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/locations/{id}": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Gets the location.",
                "description": "Gets the location base on the id.",
                "operationId": "LocationGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locationDto"
                                },
                                "example": {
                                    "id": "string",
                                    "country_code": "string",
                                    "party_id": "string",
                                    "publish": true,
                                    "publish_allowed_to": [
                                        {
                                            "uid": "string",
                                            "type": "RFID",
                                            "visual_number": "string",
                                            "issuer": "string",
                                            "group_id": "string"
                                        }
                                    ],
                                    "name": "string",
                                    "houseNumber": "string",
                                    "street": "string",
                                    "city": "string",
                                    "postal_code": "string",
                                    "state": "string",
                                    "country": "string",
                                    "hotline_phonenumber": "string",
                                    "coordinates": {
                                        "latitude": "string",
                                        "longitude": "string"
                                    },
                                    "related_locations": [
                                        {
                                            "latitude": "string",
                                            "longitude": "string",
                                            "name": {
                                                "language": "string",
                                                "text": "string"
                                            }
                                        }
                                    ],
                                    "parking_type": "ALONG_MOTORWAY",
                                    "evses": [
                                        {
                                            "id": "string",
                                            "chargepointid": "string",
                                            "latitude": 0,
                                            "longitude": 0,
                                            "uid": "string",
                                            "evse_id": "string",
                                            "status": "AVAILABLE",
                                            "status_schedule": [
                                                {
                                                    "period_begin": "string",
                                                    "period_end": "string",
                                                    "status": "AVAILABLE"
                                                }
                                            ],
                                            "capabilities": [
                                                "CHARGING_PROFILE_CAPABLE"
                                            ],
                                            "connectors": [
                                                {
                                                    "id": "string",
                                                    "standard": "CHADEMO",
                                                    "format": "SOCKET",
                                                    "power_type": "AC_1_PHASE",
                                                    "max_voltage": 0,
                                                    "max_amperage": 0,
                                                    "max_electric_power": 0,
                                                    "calc_max_electric_power": true,
                                                    "last_updated": "string"
                                                }
                                            ],
                                            "floor_level": "string",
                                            "coordinates": {
                                                "latitude": "string",
                                                "longitude": "string"
                                            },
                                            "physical_reference": "string",
                                            "directions": [
                                                {
                                                    "language": "string",
                                                    "text": "string"
                                                }
                                            ],
                                            "parking_restrictions": [
                                                "EV_ONLY"
                                            ],
                                            "images": [
                                                {
                                                    "url": "string",
                                                    "thumbnail": "string",
                                                    "category": "CHARGER",
                                                    "type": "string",
                                                    "width": 0,
                                                    "height": 0
                                                }
                                            ],
                                            "last_updated": "string"
                                        }
                                    ],
                                    "directions": [
                                        {
                                            "language": "string",
                                            "text": "string"
                                        }
                                    ],
                                    "operator": {
                                        "name": "string",
                                        "website": "string",
                                        "image": {
                                            "url": "string",
                                            "thumbnail": "string",
                                            "category": "CHARGER",
                                            "type": "string",
                                            "width": 0,
                                            "height": 0
                                        }
                                    },
                                    "suboperator": {
                                        "name": "string",
                                        "website": "string",
                                        "image": {
                                            "url": "string",
                                            "thumbnail": "string",
                                            "category": "CHARGER",
                                            "type": "string",
                                            "width": 0,
                                            "height": 0
                                        }
                                    },
                                    "owner": {
                                        "name": "string",
                                        "website": "string",
                                        "image": {
                                            "url": "string",
                                            "thumbnail": "string",
                                            "category": "CHARGER",
                                            "type": "string",
                                            "width": 0,
                                            "height": 0
                                        }
                                    },
                                    "facilities": [
                                        "HOTEL"
                                    ],
                                    "time_zone": "string",
                                    "opening_times": {
                                        "twentyfourseven": true,
                                        "regular_hours": [
                                            {
                                                "weekday": 0,
                                                "period_begin": "string",
                                                "period_end": "string"
                                            }
                                        ],
                                        "exceptional_openings": [
                                            {
                                                "period_begin": "string",
                                                "period_end": "string"
                                            }
                                        ],
                                        "exceptional_closings": [
                                            {
                                                "period_begin": "string",
                                                "period_end": "string"
                                            }
                                        ]
                                    },
                                    "charging_when_closed": true,
                                    "images": [
                                        {
                                            "url": "string",
                                            "thumbnail": "string",
                                            "category": "CHARGER",
                                            "type": "string",
                                            "width": 0,
                                            "height": 0
                                        }
                                    ],
                                    "energy_mix": {
                                        "is_green_energy": true,
                                        "energy_sources": [
                                            {
                                                "source": "NUCLEAR",
                                                "percentage": 0
                                            }
                                        ],
                                        "environ_impact": [
                                            {
                                                "category": "NUCLEAR_WASTE",
                                                "amount": 0
                                            }
                                        ]
                                    },
                                    "last_updated": "string",
                                    "hasReimbursement": true,
                                    "reimburseInfo": {
                                        "type": "ORGANIZATIONUNIT",
                                        "hasGuestUsage": true,
                                        "hasGuestChargingReimbursementFee": true,
                                        "countryCode": "string",
                                        "partyId": "string",
                                        "externalOrganizationUnitId": "string",
                                        "externalOrganizationUnitName": "string",
                                        "externalOrganizationUnitReference": "string",
                                        "externalOrganizationUnitCode": "string",
                                        "chargeCardEMAID": "string",
                                        "chargeCardUID": "string",
                                        "chargeCardIssuer": "string",
                                        "tariffs": [
                                            {
                                                "id": "string",
                                                "dateCreated": "string",
                                                "validFrom": "string",
                                                "currency": "string",
                                                "price": {
                                                    "excl_vat": 0,
                                                    "incl_vat": 0
                                                },
                                                "status": "PENDING"
                                            }
                                        ],
                                        "bankDetails": [
                                            {
                                                "bankaccount": "string",
                                                "dateCreated": "string",
                                                "validFrom": "string"
                                            }
                                        ],
                                        "tariffDistributionId": "string",
                                        "tariffDistributionHistory": [
                                            {
                                                "id": "string",
                                                "validFrom": "string"
                                            }
                                        ],
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string"
                                    },
                                    "operatorId": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chargepoint/{id}/status": {
            "get": {
                "tags": [
                    "chargepoint status"
                ],
                "summary": "Gets the chargepointstatus.",
                "description": "Gets the chargepointstatus base on the id.",
                "operationId": "ChargepointStatusGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/chargepointStatusDto"
                                },
                                "example": {
                                    "id": "string",
                                    "displayName": "string",
                                    "tenantId": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string",
                                    "timestamp": "string",
                                    "connectivityStatus": "ONLINE",
                                    "connectors": [
                                        {
                                            "connectorNumber": 0,
                                            "operationalStatus": "Available",
                                            "timestamp": "string"
                                        }
                                    ],
                                    "websocketConnected": "string",
                                    "websocketDisconnected": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}": {
            "get": {
                "tags": [
                    "chargepoints"
                ],
                "summary": "Gets the chargepoint.",
                "description": "Gets the chargepoint base on the id.",
                "operationId": "ChargepointGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/chargepointDto"
                                },
                                "example": {
                                    "id": "string",
                                    "chargePointId": "string",
                                    "dateDeleted": "string",
                                    "displayName": "string",
                                    "roamingName": "string",
                                    "chargeBoxSerialNumber": "string",
                                    "chargePointModel": "string",
                                    "chargePointSerialNumber": "string",
                                    "chargePointVendor": "string",
                                    "firmwareVersion": "string",
                                    "connectivityStatus": "ONLINE",
                                    "iccid": "string",
                                    "imsi": "string",
                                    "meterSerialNumber": "string",
                                    "meterType": "string",
                                    "tenantId": "string",
                                    "evses": [
                                        {
                                            "evse_id": "string",
                                            "connectors": [
                                                {
                                                    "id": "string",
                                                    "operationalStatus": "Available",
                                                    "standard": "CHADEMO",
                                                    "format": "SOCKET",
                                                    "powerType": "AC_1_PHASE",
                                                    "maxVoltage": 0,
                                                    "maxAmperage": 0,
                                                    "maxElectricPower": 0
                                                }
                                            ]
                                        }
                                    ],
                                    "isRoaming": true,
                                    "hasGuestUsage": true,
                                    "locationId": "string",
                                    "allowAnyToken": true,
                                    "dateCreated": "string",
                                    "updated": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string",
                                    "tariffId": "string",
                                    "tariffName": "string",
                                    "startTariff": 0,
                                    "tariffPrice": 0,
                                    "simCardNumber": "string",
                                    "tokenGroups": [
                                        "string"
                                    ],
                                    "isNew": true,
                                    "hasReimbursement": true,
                                    "reimburseTariffId": "string",
                                    "reimburseTariffName": "string",
                                    "reimburseTariffPrice": 0,
                                    "reimburseUID": "string",
                                    "reimburseTokenId": "string",
                                    "reimburseOU": "string",
                                    "useTenantFee": true,
                                    "maxCapacityInKw": 0
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "chargepoints"
                ],
                "summary": "Updates a chargepoint.",
                "description": "Updates a chargepoint.",
                "operationId": "ChargepointPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ChargepointPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/chargepointPutDto"
                            },
                            "example": {
                                "displayName": "string",
                                "roamingName": "string",
                                "allowAnyToken": true,
                                "ouCode": "string",
                                "tariffId": "string",
                                "simCardNumber": "string",
                                "isNew": true,
                                "maxCapacityInKw": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk,tariffeditor)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/cdrs/{id}": {
            "get": {
                "tags": [
                    "cdrs"
                ],
                "summary": "Gets the cdr.",
                "description": "Gets the cdr base on the id.",
                "operationId": "CdrGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cdrDto"
                                },
                                "example": {
                                    "id": "string",
                                    "tenantId": "string",
                                    "chargePointId": "string",
                                    "connectorId": 0,
                                    "cdrLocation": {
                                        "id": "string",
                                        "evseId": "string",
                                        "powerType": "AC_1_PHASE",
                                        "country_code": "string",
                                        "party_id": "string",
                                        "name": "string",
                                        "houseNumber": "string",
                                        "street": "string",
                                        "city": "string",
                                        "postal_code": "string",
                                        "state": "string",
                                        "country": "string",
                                        "hotline_phonenumber": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "time_zone": "string",
                                        "hasReimbursement": true
                                    },
                                    "startDatetime": "string",
                                    "endDateTime": "string",
                                    "sessionId": "string",
                                    "token": "string",
                                    "startedByInfo": {
                                        "tokenInfo": {
                                            "uid": "string",
                                            "authReference": "string",
                                            "tokenType": "AD_HOC_USER",
                                            "contractId": "string",
                                            "authMethod": "AUTH_REQUEST",
                                            "providerCountryCode": "string",
                                            "providerPartyId": "string",
                                            "tokenOUId": "string",
                                            "tokenOUName": "string",
                                            "tokenOU": "string"
                                        },
                                        "roamingPlatformType": "Hubject",
                                        "authorizationState": "ApprovedByRemote",
                                        "roamingPlatformConnectionId": "string",
                                        "isGuestUsage": true
                                    },
                                    "totalEnergyInKwh": 0,
                                    "totalTimeInHours": 0,
                                    "chargingPeriods": [
                                        {
                                            "timestamp": "string",
                                            "deltaKwh": 0,
                                            "absoluteKwh": 0,
                                            "price": 0
                                        }
                                    ],
                                    "totalPrice": 0,
                                    "created": "string",
                                    "lastUpdated": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string",
                                    "tariffId": "string",
                                    "tariffName": "string",
                                    "startTariff": 0,
                                    "tariffPrice": 0,
                                    "priceInfo": {
                                        "startPrice": 0,
                                        "energyPrice": 0,
                                        "totalParkingTimeInMinutes": 0,
                                        "totalParkingTimeSteps": 0,
                                        "parkingTimePrice": 0,
                                        "totalChargingTimeInMinutes": 0,
                                        "totalChargingTimeSteps": 0,
                                        "chargingTimePrice": 0,
                                        "totalPrice": 0
                                    },
                                    "localStartDateTime": "string",
                                    "localEndDateTime": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,roamingadmin,basicuser,installer,helpdesk,developer,tariffeditor)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/reimbursementcdrs/{id}": {
            "get": {
                "tags": [
                    "reimbursement"
                ],
                "summary": "Gets the ReimbursementCdr.",
                "description": "Gets the ReimbursementCdr base on the id.",
                "operationId": "ReimbursementCdrGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reimbursementCdrDto"
                                },
                                "example": {
                                    "id": "string",
                                    "tenantId": "string",
                                    "chargePointId": "string",
                                    "connectorId": 0,
                                    "locationId": "string",
                                    "evseId": "string",
                                    "location": {
                                        "id": "string",
                                        "evseId": "string",
                                        "powerType": "AC_1_PHASE",
                                        "country_code": "string",
                                        "party_id": "string",
                                        "name": "string",
                                        "houseNumber": "string",
                                        "street": "string",
                                        "city": "string",
                                        "postal_code": "string",
                                        "state": "string",
                                        "country": "string",
                                        "hotline_phonenumber": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "time_zone": "string",
                                        "hasReimbursement": true
                                    },
                                    "startDatetime": "string",
                                    "endDateTime": "string",
                                    "sessionId": "string",
                                    "startedByInfo": {
                                        "idTag": "string",
                                        "tokenInfo": {
                                            "uid": "string",
                                            "authReference": "string",
                                            "tokenType": "AD_HOC_USER",
                                            "contractId": "string",
                                            "authMethod": "AUTH_REQUEST",
                                            "providerCountryCode": "string",
                                            "providerPartyId": "string",
                                            "tokenOUId": "string",
                                            "tokenOUName": "string",
                                            "tokenOU": "string"
                                        },
                                        "authorizationState": "ApprovedByRemote",
                                        "isGuestUsage": true
                                    },
                                    "meterStartInWh": 0,
                                    "meterStopInWh": 0,
                                    "totalEnergyInKwh": 0,
                                    "totalTimeInHours": 0,
                                    "totalPrice": 0,
                                    "created": "string",
                                    "lastUpdated": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string",
                                    "reimburseTariffId": "string",
                                    "reimburseTariffName": "string",
                                    "reimburseTariffPrice": 0,
                                    "reimburseTariffCalculated": true,
                                    "reimbursePriceCalculatedOn": "string",
                                    "bankAccount": "string",
                                    "bankAccountCreatedOn": "string",
                                    "bankAccountValidFrom": "string",
                                    "reimburseTariffOriginalPrice": 0,
                                    "hasGuestChargingReimbursementFee": true,
                                    "reimburseTenantFee": 0,
                                    "tenantFeeCalculated": true,
                                    "tariffDistributionId": "string",
                                    "priceInfo": {
                                        "startPrice": 0,
                                        "energyPrice": 0,
                                        "totalParkingTimeInMinutes": 0,
                                        "totalParkingTimeSteps": 0,
                                        "parkingTimePrice": 0,
                                        "totalChargingTimeInMinutes": 0,
                                        "totalChargingTimeSteps": 0,
                                        "chargingTimePrice": 0,
                                        "totalPrice": 0
                                    },
                                    "customerShare": 0,
                                    "energyCompensation": 0,
                                    "reimbursementCustomerShare": {
                                        "customerShare": 0,
                                        "energyCompensation": 0,
                                        "tenantFee": 0
                                    },
                                    "localStartDateTime": "string",
                                    "localEndDateTime": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,roamingadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/organizationalunits": {
            "post": {
                "tags": [
                    "organizationunits"
                ],
                "summary": "Creates a organizationunit.",
                "description": "Creates a new organizationunit.",
                "operationId": "OrganizationUnitPost",
                "requestBody": {
                    "description": "The OrganizationUnitPostDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/organizationUnitPostDto"
                            },
                            "example": {
                                "parentId": "string",
                                "name": "string",
                                "externalReference": "string",
                                "address": "string",
                                "state": "string",
                                "country": "string",
                                "city": "string",
                                "houseNumber": "string",
                                "postalCode": "string",
                                "hotlinePhoneNumber": "string",
                                "companyEmail": "string",
                                "primaryContactperson": "string",
                                "primaryContactpersonEmail": "string",
                                "mspOuId": "string",
                                "mspOuName": "string",
                                "mspOuCode": "string",
                                "mspExternalId": "string",
                                "financialDetails": {
                                    "beneficiaryName": "string",
                                    "iban": "string",
                                    "bic": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "organizationunits"
                ],
                "summary": "Get a list of organizationunits.",
                "description": "Get a paged list of organizationunits, taken the filters into account.",
                "operationId": "GetAllOrganizationunits",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/organizationUnitGetDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "parentId": "string",
                                        "name": "string",
                                        "code": "string",
                                        "externalReference": "string",
                                        "address": "string",
                                        "state": "string",
                                        "country": "string",
                                        "city": "string",
                                        "houseNumber": "string",
                                        "postalCode": "string",
                                        "hotlinePhoneNumber": "string",
                                        "companyEmail": "string",
                                        "primaryContactperson": "string",
                                        "primaryContactpersonEmail": "string",
                                        "directPaymentProfileId": "string",
                                        "mspOuId": "string",
                                        "mspOuName": "string",
                                        "mspOuCode": "string",
                                        "mspExternalId": "string",
                                        "financialDetails": {
                                            "beneficiaryName": "string",
                                            "iban": "string",
                                            "bic": "string"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/organizationalunits/{id}": {
            "get": {
                "tags": [
                    "organizationunits"
                ],
                "summary": "Gets the organizationunit.",
                "description": "Gets the organizationunit base on the id.",
                "operationId": "OrganizationUnitGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/organizationUnitGetDto"
                                },
                                "example": {
                                    "id": "string",
                                    "parentId": "string",
                                    "name": "string",
                                    "code": "string",
                                    "externalReference": "string",
                                    "address": "string",
                                    "state": "string",
                                    "country": "string",
                                    "city": "string",
                                    "houseNumber": "string",
                                    "postalCode": "string",
                                    "hotlinePhoneNumber": "string",
                                    "companyEmail": "string",
                                    "primaryContactperson": "string",
                                    "primaryContactpersonEmail": "string",
                                    "directPaymentProfileId": "string",
                                    "mspOuId": "string",
                                    "mspOuName": "string",
                                    "mspOuCode": "string",
                                    "mspExternalId": "string",
                                    "financialDetails": {
                                        "beneficiaryName": "string",
                                        "iban": "string",
                                        "bic": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizationunits"
                ],
                "summary": "Updates a organizationunit.",
                "description": "Updates a organizationunit.",
                "operationId": "OrganizationUnitPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The OrganizationUnitPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/organizationUnitPutDto"
                            },
                            "example": {
                                "name": "string",
                                "externalReference": "string",
                                "address": "string",
                                "state": "string",
                                "country": "string",
                                "city": "string",
                                "houseNumber": "string",
                                "postalCode": "string",
                                "hotlinePhoneNumber": "string",
                                "companyEmail": "string",
                                "primaryContactperson": "string",
                                "primaryContactpersonEmail": "string",
                                "mspOuId": "string",
                                "mspOuName": "string",
                                "mspOuCode": "string",
                                "mspExternalId": "string",
                                "financialDetails": {
                                    "beneficiaryName": "string",
                                    "iban": "string",
                                    "bic": "string"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Request was successful.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/locations": {
            "put": {
                "tags": [
                    "locations"
                ],
                "summary": "Updates a location.",
                "description": "Updates a location.",
                "operationId": "LocationPut",
                "requestBody": {
                    "description": "The LocationPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/locationPutDto"
                            },
                            "example": {
                                "id": "string",
                                "country_code": "string",
                                "party_id": "string",
                                "publish": true,
                                "publish_allowed_to": [
                                    {
                                        "uid": "string",
                                        "type": "RFID",
                                        "visual_number": "string",
                                        "issuer": "string",
                                        "group_id": "string"
                                    }
                                ],
                                "name": "string",
                                "houseNumber": "string",
                                "street": "string",
                                "city": "string",
                                "postal_code": "string",
                                "state": "string",
                                "country": "string",
                                "hotline_phonenumber": "string",
                                "coordinates": {
                                    "latitude": "string",
                                    "longitude": "string"
                                },
                                "related_locations": [
                                    {
                                        "latitude": "string",
                                        "longitude": "string",
                                        "name": {
                                            "language": "string",
                                            "text": "string"
                                        }
                                    }
                                ],
                                "parking_type": "ALONG_MOTORWAY",
                                "evses": [
                                    {
                                        "id": "string",
                                        "chargepointid": "string",
                                        "latitude": 0,
                                        "longitude": 0,
                                        "uid": "string",
                                        "evse_id": "string",
                                        "status": "AVAILABLE",
                                        "status_schedule": [
                                            {
                                                "period_begin": "string",
                                                "period_end": "string",
                                                "status": "AVAILABLE"
                                            }
                                        ],
                                        "capabilities": [
                                            "CHARGING_PROFILE_CAPABLE"
                                        ],
                                        "connectors": [
                                            {
                                                "id": "string",
                                                "standard": "CHADEMO",
                                                "format": "SOCKET",
                                                "power_type": "AC_1_PHASE",
                                                "max_voltage": 0,
                                                "max_amperage": 0,
                                                "max_electric_power": 0,
                                                "calc_max_electric_power": true,
                                                "last_updated": "string"
                                            }
                                        ],
                                        "floor_level": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "physical_reference": "string",
                                        "directions": [
                                            {
                                                "language": "string",
                                                "text": "string"
                                            }
                                        ],
                                        "parking_restrictions": [
                                            "EV_ONLY"
                                        ],
                                        "images": [
                                            {
                                                "url": "string",
                                                "thumbnail": "string",
                                                "category": "CHARGER",
                                                "type": "string",
                                                "width": 0,
                                                "height": 0
                                            }
                                        ],
                                        "last_updated": "string"
                                    }
                                ],
                                "directions": [
                                    {
                                        "language": "string",
                                        "text": "string"
                                    }
                                ],
                                "operator": {
                                    "name": "string",
                                    "website": "string",
                                    "image": {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                },
                                "suboperator": {
                                    "name": "string",
                                    "website": "string",
                                    "image": {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                },
                                "owner": {
                                    "name": "string",
                                    "website": "string",
                                    "image": {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                },
                                "facilities": [
                                    "HOTEL"
                                ],
                                "time_zone": "string",
                                "opening_times": {
                                    "twentyfourseven": true,
                                    "regular_hours": [
                                        {
                                            "weekday": 0,
                                            "period_begin": "string",
                                            "period_end": "string"
                                        }
                                    ],
                                    "exceptional_openings": [
                                        {
                                            "period_begin": "string",
                                            "period_end": "string"
                                        }
                                    ],
                                    "exceptional_closings": [
                                        {
                                            "period_begin": "string",
                                            "period_end": "string"
                                        }
                                    ]
                                },
                                "charging_when_closed": true,
                                "images": [
                                    {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                ],
                                "energy_mix": {
                                    "is_green_energy": true,
                                    "energy_sources": [
                                        {
                                            "source": "NUCLEAR",
                                            "percentage": 0
                                        }
                                    ],
                                    "environ_impact": [
                                        {
                                            "category": "NUCLEAR_WASTE",
                                            "amount": 0
                                        }
                                    ]
                                },
                                "last_updated": "string",
                                "hasReimbursement": true,
                                "reimburseInfo": {
                                    "type": "ORGANIZATIONUNIT",
                                    "hasGuestUsage": true,
                                    "hasGuestChargingReimbursementFee": true,
                                    "countryCode": "string",
                                    "partyId": "string",
                                    "externalOrganizationUnitId": "string",
                                    "externalOrganizationUnitName": "string",
                                    "externalOrganizationUnitReference": "string",
                                    "externalOrganizationUnitCode": "string",
                                    "chargeCardEMAID": "string",
                                    "chargeCardUID": "string",
                                    "chargeCardIssuer": "string",
                                    "tariffs": [
                                        {
                                            "id": "string",
                                            "dateCreated": "string",
                                            "validFrom": "string",
                                            "currency": "string",
                                            "price": {
                                                "excl_vat": 0,
                                                "incl_vat": 0
                                            },
                                            "status": "PENDING"
                                        }
                                    ],
                                    "bankDetails": [
                                        {
                                            "bankaccount": "string",
                                            "dateCreated": "string",
                                            "validFrom": "string"
                                        }
                                    ],
                                    "tariffDistributionId": "string",
                                    "tariffDistributionHistory": [
                                        {
                                            "id": "string",
                                            "validFrom": "string"
                                        }
                                    ],
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string"
                                },
                                "ou": "string",
                                "ouId": "string",
                                "ouName": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "locations"
                ],
                "summary": "Creates a location.",
                "description": "Creates a new location.",
                "operationId": "LocationPost",
                "requestBody": {
                    "description": "The LocationPostDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/locationPostDto"
                            },
                            "example": {
                                "id": "string",
                                "street": "string",
                                "city": "string",
                                "country": "string",
                                "coordinates": {
                                    "latitude": "string",
                                    "longitude": "string"
                                },
                                "timezone": "string",
                                "publish": true,
                                "publishAllowedTo": [
                                    {
                                        "uid": "string",
                                        "type": "RFID",
                                        "visual_number": "string",
                                        "issuer": "string",
                                        "group_id": "string"
                                    }
                                ],
                                "name": "string",
                                "houseNumber": "string",
                                "postalCode": "string",
                                "state": "string",
                                "hotlinePhonenumber": "string",
                                "relatedLocations": [
                                    {
                                        "latitude": "string",
                                        "longitude": "string",
                                        "name": {
                                            "language": "string",
                                            "text": "string"
                                        }
                                    }
                                ],
                                "parkingType": "ALONG_MOTORWAY",
                                "evses": [
                                    {
                                        "id": "string",
                                        "chargepointid": "string",
                                        "latitude": 0,
                                        "longitude": 0,
                                        "uid": "string",
                                        "evse_id": "string",
                                        "status": "AVAILABLE",
                                        "status_schedule": [
                                            {
                                                "period_begin": "string",
                                                "period_end": "string",
                                                "status": "AVAILABLE"
                                            }
                                        ],
                                        "capabilities": [
                                            "CHARGING_PROFILE_CAPABLE"
                                        ],
                                        "connectors": [
                                            {
                                                "id": "string",
                                                "standard": "CHADEMO",
                                                "format": "SOCKET",
                                                "power_type": "AC_1_PHASE",
                                                "max_voltage": 0,
                                                "max_amperage": 0,
                                                "max_electric_power": 0,
                                                "calc_max_electric_power": true,
                                                "last_updated": "string"
                                            }
                                        ],
                                        "floor_level": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "physical_reference": "string",
                                        "directions": [
                                            {
                                                "language": "string",
                                                "text": "string"
                                            }
                                        ],
                                        "parking_restrictions": [
                                            "EV_ONLY"
                                        ],
                                        "images": [
                                            {
                                                "url": "string",
                                                "thumbnail": "string",
                                                "category": "CHARGER",
                                                "type": "string",
                                                "width": 0,
                                                "height": 0
                                            }
                                        ],
                                        "last_updated": "string"
                                    }
                                ],
                                "directions": [
                                    {
                                        "language": "string",
                                        "text": "string"
                                    }
                                ],
                                "operator": {
                                    "name": "string",
                                    "website": "string",
                                    "image": {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                },
                                "suboperator": {
                                    "name": "string",
                                    "website": "string",
                                    "image": {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                },
                                "owner": {
                                    "name": "string",
                                    "website": "string",
                                    "image": {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                },
                                "facilities": [
                                    "HOTEL"
                                ],
                                "openingTimes": {
                                    "twentyfourseven": true,
                                    "regular_hours": [
                                        {
                                            "weekday": 0,
                                            "period_begin": "string",
                                            "period_end": "string"
                                        }
                                    ],
                                    "exceptional_openings": [
                                        {
                                            "period_begin": "string",
                                            "period_end": "string"
                                        }
                                    ],
                                    "exceptional_closings": [
                                        {
                                            "period_begin": "string",
                                            "period_end": "string"
                                        }
                                    ]
                                },
                                "chargingWhenClosed": true,
                                "images": [
                                    {
                                        "url": "string",
                                        "thumbnail": "string",
                                        "category": "CHARGER",
                                        "type": "string",
                                        "width": 0,
                                        "height": 0
                                    }
                                ],
                                "energyMix": {
                                    "is_green_energy": true,
                                    "energy_sources": [
                                        {
                                            "source": "NUCLEAR",
                                            "percentage": 0
                                        }
                                    ],
                                    "environ_impact": [
                                        {
                                            "category": "NUCLEAR_WASTE",
                                            "amount": 0
                                        }
                                    ]
                                },
                                "hasReimbursement": true,
                                "reimburseInfo": {
                                    "type": "ORGANIZATIONUNIT",
                                    "hasGuestUsage": true,
                                    "hasGuestChargingReimbursementFee": true,
                                    "countryCode": "string",
                                    "partyId": "string",
                                    "externalOrganizationUnitId": "string",
                                    "externalOrganizationUnitName": "string",
                                    "externalOrganizationUnitReference": "string",
                                    "externalOrganizationUnitCode": "string",
                                    "chargeCardEMAID": "string",
                                    "chargeCardUID": "string",
                                    "chargeCardIssuer": "string",
                                    "tariffs": [
                                        {
                                            "id": "string",
                                            "dateCreated": "string",
                                            "validFrom": "string",
                                            "currency": "string",
                                            "price": {
                                                "excl_vat": 0,
                                                "incl_vat": 0
                                            },
                                            "status": "PENDING"
                                        }
                                    ],
                                    "bankDetails": [
                                        {
                                            "bankaccount": "string",
                                            "dateCreated": "string",
                                            "validFrom": "string"
                                        }
                                    ],
                                    "tariffDistributionId": "string",
                                    "tariffDistributionHistory": [
                                        {
                                            "id": "string",
                                            "validFrom": "string"
                                        }
                                    ],
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string"
                                },
                                "operatorId": "string",
                                "ou": "string",
                                "ouId": "string",
                                "ouName": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource with this id already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Get a list of locations.",
                "description": "Get a paged list of locations, taken the filters into account.",
                "operationId": "GetAllLocations",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "name",
                                "address",
                                "ouname"
                            ],
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locationDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "country_code": "string",
                                        "party_id": "string",
                                        "publish": true,
                                        "publish_allowed_to": [
                                            {
                                                "uid": "string",
                                                "type": "RFID",
                                                "visual_number": "string",
                                                "issuer": "string",
                                                "group_id": "string"
                                            }
                                        ],
                                        "name": "string",
                                        "houseNumber": "string",
                                        "street": "string",
                                        "city": "string",
                                        "postal_code": "string",
                                        "state": "string",
                                        "country": "string",
                                        "hotline_phonenumber": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "related_locations": [
                                            {
                                                "latitude": "string",
                                                "longitude": "string",
                                                "name": {
                                                    "language": "string",
                                                    "text": "string"
                                                }
                                            }
                                        ],
                                        "parking_type": "ALONG_MOTORWAY",
                                        "evses": [
                                            {
                                                "id": "string",
                                                "chargepointid": "string",
                                                "latitude": 0,
                                                "longitude": 0,
                                                "uid": "string",
                                                "evse_id": "string",
                                                "status": "AVAILABLE",
                                                "status_schedule": [
                                                    {
                                                        "period_begin": "string",
                                                        "period_end": "string",
                                                        "status": "AVAILABLE"
                                                    }
                                                ],
                                                "capabilities": [
                                                    "CHARGING_PROFILE_CAPABLE"
                                                ],
                                                "connectors": [
                                                    {
                                                        "id": "string",
                                                        "standard": "CHADEMO",
                                                        "format": "SOCKET",
                                                        "power_type": "AC_1_PHASE",
                                                        "max_voltage": 0,
                                                        "max_amperage": 0,
                                                        "max_electric_power": 0,
                                                        "calc_max_electric_power": true,
                                                        "last_updated": "string"
                                                    }
                                                ],
                                                "floor_level": "string",
                                                "coordinates": {
                                                    "latitude": "string",
                                                    "longitude": "string"
                                                },
                                                "physical_reference": "string",
                                                "directions": [
                                                    {
                                                        "language": "string",
                                                        "text": "string"
                                                    }
                                                ],
                                                "parking_restrictions": [
                                                    "EV_ONLY"
                                                ],
                                                "images": [
                                                    {
                                                        "url": "string",
                                                        "thumbnail": "string",
                                                        "category": "CHARGER",
                                                        "type": "string",
                                                        "width": 0,
                                                        "height": 0
                                                    }
                                                ],
                                                "last_updated": "string"
                                            }
                                        ],
                                        "directions": [
                                            {
                                                "language": "string",
                                                "text": "string"
                                            }
                                        ],
                                        "operator": {
                                            "name": "string",
                                            "website": "string",
                                            "image": {
                                                "url": "string",
                                                "thumbnail": "string",
                                                "category": "CHARGER",
                                                "type": "string",
                                                "width": 0,
                                                "height": 0
                                            }
                                        },
                                        "suboperator": {
                                            "name": "string",
                                            "website": "string",
                                            "image": {
                                                "url": "string",
                                                "thumbnail": "string",
                                                "category": "CHARGER",
                                                "type": "string",
                                                "width": 0,
                                                "height": 0
                                            }
                                        },
                                        "owner": {
                                            "name": "string",
                                            "website": "string",
                                            "image": {
                                                "url": "string",
                                                "thumbnail": "string",
                                                "category": "CHARGER",
                                                "type": "string",
                                                "width": 0,
                                                "height": 0
                                            }
                                        },
                                        "facilities": [
                                            "HOTEL"
                                        ],
                                        "time_zone": "string",
                                        "opening_times": {
                                            "twentyfourseven": true,
                                            "regular_hours": [
                                                {
                                                    "weekday": 0,
                                                    "period_begin": "string",
                                                    "period_end": "string"
                                                }
                                            ],
                                            "exceptional_openings": [
                                                {
                                                    "period_begin": "string",
                                                    "period_end": "string"
                                                }
                                            ],
                                            "exceptional_closings": [
                                                {
                                                    "period_begin": "string",
                                                    "period_end": "string"
                                                }
                                            ]
                                        },
                                        "charging_when_closed": true,
                                        "images": [
                                            {
                                                "url": "string",
                                                "thumbnail": "string",
                                                "category": "CHARGER",
                                                "type": "string",
                                                "width": 0,
                                                "height": 0
                                            }
                                        ],
                                        "energy_mix": {
                                            "is_green_energy": true,
                                            "energy_sources": [
                                                {
                                                    "source": "NUCLEAR",
                                                    "percentage": 0
                                                }
                                            ],
                                            "environ_impact": [
                                                {
                                                    "category": "NUCLEAR_WASTE",
                                                    "amount": 0
                                                }
                                            ]
                                        },
                                        "last_updated": "string",
                                        "hasReimbursement": true,
                                        "reimburseInfo": {
                                            "type": "ORGANIZATIONUNIT",
                                            "hasGuestUsage": true,
                                            "hasGuestChargingReimbursementFee": true,
                                            "countryCode": "string",
                                            "partyId": "string",
                                            "externalOrganizationUnitId": "string",
                                            "externalOrganizationUnitName": "string",
                                            "externalOrganizationUnitReference": "string",
                                            "externalOrganizationUnitCode": "string",
                                            "chargeCardEMAID": "string",
                                            "chargeCardUID": "string",
                                            "chargeCardIssuer": "string",
                                            "tariffs": [
                                                {
                                                    "id": "string",
                                                    "dateCreated": "string",
                                                    "validFrom": "string",
                                                    "currency": "string",
                                                    "price": {
                                                        "excl_vat": 0,
                                                        "incl_vat": 0
                                                    },
                                                    "status": "PENDING"
                                                }
                                            ],
                                            "bankDetails": [
                                                {
                                                    "bankaccount": "string",
                                                    "dateCreated": "string",
                                                    "validFrom": "string"
                                                }
                                            ],
                                            "tariffDistributionId": "string",
                                            "tariffDistributionHistory": [
                                                {
                                                    "id": "string",
                                                    "validFrom": "string"
                                                }
                                            ],
                                            "ou": "string",
                                            "ouId": "string",
                                            "ouName": "string"
                                        },
                                        "operatorId": "string",
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/sessions": {
            "get": {
                "tags": [
                    "sessions"
                ],
                "summary": "Get a list of sessions.",
                "description": "Get a paged list of sessions, taken the filters into account.",
                "operationId": "GetAllSessions",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "connectorNumber",
                        "in": "query",
                        "description": "Format - int32. Only data from this connector will be returned.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "chargepointId",
                        "in": "query",
                        "description": "Only data from this chargepoint will be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "runningOnly",
                        "in": "query",
                        "description": "A flag indicating to only return data that is running.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "completedOnly",
                        "in": "query",
                        "description": "A flag indicating to only return data that is completed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "start",
                                "stop"
                            ],
                            "type": "string",
                            "default": "start"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sessionDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "tenantId": "string",
                                        "chargePointId": "string",
                                        "transactionId": 0,
                                        "ocppTransactionId": "string",
                                        "connectorId": 0,
                                        "sessionLocation": {
                                            "id": "string",
                                            "evseId": "string",
                                            "powerType": "AC_1_PHASE",
                                            "country_code": "string",
                                            "party_id": "string",
                                            "name": "string",
                                            "houseNumber": "string",
                                            "street": "string",
                                            "city": "string",
                                            "postal_code": "string",
                                            "state": "string",
                                            "country": "string",
                                            "hotline_phonenumber": "string",
                                            "coordinates": {
                                                "latitude": "string",
                                                "longitude": "string"
                                            },
                                            "time_zone": "string",
                                            "hasReimbursement": true
                                        },
                                        "idTag": "string",
                                        "startedByInfo": {
                                            "tokenInfo": {
                                                "uid": "string",
                                                "authReference": "string",
                                                "tokenType": "AD_HOC_USER",
                                                "contractId": "string",
                                                "authMethod": "AUTH_REQUEST",
                                                "providerCountryCode": "string",
                                                "providerPartyId": "string",
                                                "tokenOUId": "string",
                                                "tokenOUName": "string",
                                                "tokenOU": "string"
                                            },
                                            "roamingPlatformType": "Hubject",
                                            "authorizationState": "ApprovedByRemote",
                                            "roamingPlatformConnectionId": "string",
                                            "isGuestUsage": true
                                        },
                                        "meterStartInWh": 0,
                                        "sessionStart": "string",
                                        "chargingPeriods": [
                                            {
                                                "timestamp": "string",
                                                "deltaKwh": 0,
                                                "absoluteKwh": 0,
                                                "price": 0
                                            }
                                        ],
                                        "chargingMeterValues": [
                                            {
                                                "timestamp": "string",
                                                "value": "string",
                                                "measurand": "Energy.Active.Export.Register",
                                                "unit": "Wh"
                                            }
                                        ],
                                        "meterStopInWh": 0,
                                        "sessionStop": "string",
                                        "status": "ACTIVE",
                                        "totalEnergyInKwh": 0,
                                        "totalPrice": 0,
                                        "created": "string",
                                        "lastUpdated": "string",
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string",
                                        "tariffInfo": {
                                            "tariffId": "string",
                                            "tariffName": "string",
                                            "startTariff": 0,
                                            "tariffPrice": 0,
                                            "parkingTariff": 0,
                                            "parkingStepSizeInMinutes": 0,
                                            "parkingGracePeriodInMinutes": 0,
                                            "timeTariff": 0,
                                            "timeStepSizeInMinutes": 0,
                                            "timeGracePeriodInMinutes": 0,
                                            "assertions": [
                                                {
                                                    "tariffType": "ReimbursementTariff",
                                                    "isTariffUsed": true,
                                                    "tariffResult": "string"
                                                }
                                            ]
                                        },
                                        "priceInfo": {
                                            "startPrice": 0,
                                            "energyPrice": 0,
                                            "totalParkingTimeInMinutes": 0,
                                            "totalParkingTimeSteps": 0,
                                            "parkingTimePrice": 0,
                                            "totalChargingTimeInMinutes": 0,
                                            "totalChargingTimeSteps": 0,
                                            "chargingTimePrice": 0,
                                            "totalPrice": 0
                                        },
                                        "tariffId": "string",
                                        "tariffName": "string",
                                        "startTariff": 0,
                                        "tariffPrice": 0,
                                        "parkingTariff": 0,
                                        "parkingStepSize": 0,
                                        "delayInMinutes": 0
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/reimbursementcdrs": {
            "get": {
                "tags": [
                    "reimbursement"
                ],
                "summary": "Get a list of reimbursementcdrs.",
                "description": "Get a paged list of reimbursementcdrs, taken the filters into account.",
                "operationId": "GetAllReimbursementcdrs",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "providerexclude",
                        "in": "query",
                        "description": "Excludes any provider from the results, use comma separated string (eg. NLLON,NLDEF).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "startdatetime",
                                "enddatetime"
                            ],
                            "type": "string",
                            "default": "startdatetime"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources from created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources to created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reimbursementCdrDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "tenantId": "string",
                                        "chargePointId": "string",
                                        "connectorId": 0,
                                        "locationId": "string",
                                        "evseId": "string",
                                        "location": {
                                            "id": "string",
                                            "evseId": "string",
                                            "powerType": "AC_1_PHASE",
                                            "country_code": "string",
                                            "party_id": "string",
                                            "name": "string",
                                            "houseNumber": "string",
                                            "street": "string",
                                            "city": "string",
                                            "postal_code": "string",
                                            "state": "string",
                                            "country": "string",
                                            "hotline_phonenumber": "string",
                                            "coordinates": {
                                                "latitude": "string",
                                                "longitude": "string"
                                            },
                                            "time_zone": "string",
                                            "hasReimbursement": true
                                        },
                                        "startDatetime": "string",
                                        "endDateTime": "string",
                                        "sessionId": "string",
                                        "startedByInfo": {
                                            "idTag": "string",
                                            "tokenInfo": {
                                                "uid": "string",
                                                "authReference": "string",
                                                "tokenType": "AD_HOC_USER",
                                                "contractId": "string",
                                                "authMethod": "AUTH_REQUEST",
                                                "providerCountryCode": "string",
                                                "providerPartyId": "string",
                                                "tokenOUId": "string",
                                                "tokenOUName": "string",
                                                "tokenOU": "string"
                                            },
                                            "authorizationState": "ApprovedByRemote",
                                            "isGuestUsage": true
                                        },
                                        "meterStartInWh": 0,
                                        "meterStopInWh": 0,
                                        "totalEnergyInKwh": 0,
                                        "totalTimeInHours": 0,
                                        "totalPrice": 0,
                                        "created": "string",
                                        "lastUpdated": "string",
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string",
                                        "reimburseTariffId": "string",
                                        "reimburseTariffName": "string",
                                        "reimburseTariffPrice": 0,
                                        "reimburseTariffCalculated": true,
                                        "reimbursePriceCalculatedOn": "string",
                                        "bankAccount": "string",
                                        "bankAccountCreatedOn": "string",
                                        "bankAccountValidFrom": "string",
                                        "reimburseTariffOriginalPrice": 0,
                                        "hasGuestChargingReimbursementFee": true,
                                        "reimburseTenantFee": 0,
                                        "tenantFeeCalculated": true,
                                        "tariffDistributionId": "string",
                                        "priceInfo": {
                                            "startPrice": 0,
                                            "energyPrice": 0,
                                            "totalParkingTimeInMinutes": 0,
                                            "totalParkingTimeSteps": 0,
                                            "parkingTimePrice": 0,
                                            "totalChargingTimeInMinutes": 0,
                                            "totalChargingTimeSteps": 0,
                                            "chargingTimePrice": 0,
                                            "totalPrice": 0
                                        },
                                        "customerShare": 0,
                                        "energyCompensation": 0,
                                        "reimbursementCustomerShare": {
                                            "customerShare": 0,
                                            "energyCompensation": 0,
                                            "tenantFee": 0
                                        },
                                        "localStartDateTime": "string",
                                        "localEndDateTime": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,roamingadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/mspreimbursement/webhook/{id}": {
            "post": {
                "tags": [
                    "mspreimbursement"
                ],
                "summary": "Creates a reimbursementwebhook.",
                "description": "Creates a new reimbursementwebhook.",
                "operationId": "ReimbursementWebhookPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Request was successful.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/reset": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a ResetRequest.",
                "description": "Sends a ResetRequest command to the chargepoint.",
                "operationId": "SendResetRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ResetRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resetRequest"
                            },
                            "example": {
                                "type": "Hard"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/remotestop": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a RemoteStopTransactionRequest.",
                "description": "Sends a RemoteStopTransactionRequest command to the chargepoint.",
                "operationId": "SendRemoteStopTransactionRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The RemoteStopTransactionRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/remoteStopTransactionRequest"
                            },
                            "example": {
                                "transactionId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/remotestart": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a RemoteStartTransactionRequest.",
                "description": "Sends a RemoteStartTransactionRequest command to the chargepoint.",
                "operationId": "SendRemoteStartTransactionRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The RemoteStartTransactionRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/remoteStartTransactionRequest"
                            },
                            "example": {
                                "connectorId": 0,
                                "idTag": "string",
                                "chargingProfile": {
                                    "chargingProfileId": 0,
                                    "transactionId": 0,
                                    "stackLevel": 0,
                                    "chargingProfilePurpose": "ChargePointMaxProfile",
                                    "chargingProfileKind": "Absolute",
                                    "recurrencyKind": "Daily",
                                    "validFrom": "string",
                                    "validTo": "string",
                                    "chargingSchedule": {
                                        "duration": 0,
                                        "startSchedule": "string",
                                        "chargingRateUnit": "A",
                                        "chargingSchedulePeriod": [
                                            {
                                                "startPeriod": 0,
                                                "limit": 0,
                                                "numberPhases": 0
                                            }
                                        ],
                                        "minChargingRate": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/clearchargingprofile": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a ClearChargingProfileRequest.",
                "description": "Sends a ClearChargingProfileRequest command to the chargepoint.",
                "operationId": "SendClearChargingProfileRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ClearChargingProfileRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clearChargingProfileRequest"
                            },
                            "example": {
                                "id": 0,
                                "connectorId": 0,
                                "chargingProfilePurpose": "ChargePointMaxProfile",
                                "stackLevel": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/getcompositeschedule": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a GetCompositeScheduleRequest.",
                "description": "Sends a GetCompositeScheduleRequest command to the chargepoint.",
                "operationId": "SendGetCompositeScheduleRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The GetCompositeScheduleRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getCompositeScheduleRequest"
                            },
                            "example": {
                                "connectorId": 0,
                                "duration": 0,
                                "chargingRateUnit": "A"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/setchargingprofile": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a SetChargingProfileRequest.",
                "description": "Sends a SetChargingProfileRequest command to the chargepoint.",
                "operationId": "SendSetChargingProfileRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The SetChargingProfileRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/setChargingProfileRequest"
                            },
                            "example": {
                                "connectorId": 0,
                                "csChargingProfiles": {
                                    "chargingProfileId": 0,
                                    "transactionId": 0,
                                    "stackLevel": 0,
                                    "chargingProfilePurpose": "ChargePointMaxProfile",
                                    "chargingProfileKind": "Absolute",
                                    "recurrencyKind": "Daily",
                                    "validFrom": "string",
                                    "validTo": "string",
                                    "chargingSchedule": {
                                        "duration": 0,
                                        "startSchedule": "string",
                                        "chargingRateUnit": "A",
                                        "chargingSchedulePeriod": [
                                            {
                                                "startPeriod": 0,
                                                "limit": 0,
                                                "numberPhases": 0
                                            }
                                        ],
                                        "minChargingRate": 0
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints": {
            "get": {
                "tags": [
                    "chargepoints"
                ],
                "summary": "Get a list of chargepoints.",
                "description": "Get a paged list of chargepoints, taken the filters into account.",
                "operationId": "GetAllChargepoints",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "name",
                                "ouname",
                                "model",
                                "serialnumber"
                            ],
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/chargepointDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "chargePointId": "string",
                                        "dateDeleted": "string",
                                        "displayName": "string",
                                        "roamingName": "string",
                                        "chargeBoxSerialNumber": "string",
                                        "chargePointModel": "string",
                                        "chargePointSerialNumber": "string",
                                        "chargePointVendor": "string",
                                        "firmwareVersion": "string",
                                        "connectivityStatus": "ONLINE",
                                        "iccid": "string",
                                        "imsi": "string",
                                        "meterSerialNumber": "string",
                                        "meterType": "string",
                                        "tenantId": "string",
                                        "evses": [
                                            {
                                                "evse_id": "string",
                                                "connectors": [
                                                    {
                                                        "id": "string",
                                                        "operationalStatus": "Available",
                                                        "standard": "CHADEMO",
                                                        "format": "SOCKET",
                                                        "powerType": "AC_1_PHASE",
                                                        "maxVoltage": 0,
                                                        "maxAmperage": 0,
                                                        "maxElectricPower": 0
                                                    }
                                                ]
                                            }
                                        ],
                                        "isRoaming": true,
                                        "hasGuestUsage": true,
                                        "locationId": "string",
                                        "allowAnyToken": true,
                                        "dateCreated": "string",
                                        "updated": "string",
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string",
                                        "tariffId": "string",
                                        "tariffName": "string",
                                        "startTariff": 0,
                                        "tariffPrice": 0,
                                        "simCardNumber": "string",
                                        "tokenGroups": [
                                            "string"
                                        ],
                                        "isNew": true,
                                        "hasReimbursement": true,
                                        "reimburseTariffId": "string",
                                        "reimburseTariffName": "string",
                                        "reimburseTariffPrice": 0,
                                        "reimburseUID": "string",
                                        "reimburseTokenId": "string",
                                        "reimburseOU": "string",
                                        "useTenantFee": true,
                                        "maxCapacityInKw": 0
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chargepointstatus": {
            "get": {
                "tags": [
                    "chargepoint status"
                ],
                "summary": "Get a list of chargepointstatus.",
                "description": "Get a paged list of chargepointstatus, taken the filters into account.",
                "operationId": "GetAllChargepointstatus",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/chargepointStatusDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "tenantId": "string",
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string",
                                        "timestamp": "string",
                                        "connectivityStatus": "ONLINE",
                                        "connectors": [
                                            {
                                                "connectorNumber": 0,
                                                "operationalStatus": "Available",
                                                "timestamp": "string"
                                            }
                                        ],
                                        "websocketConnected": "string",
                                        "websocketDisconnected": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/messages": {
            "get": {
                "tags": [
                    "chargepoints"
                ],
                "summary": "Get a list of chargepointmessages.",
                "description": "Get a paged list of chargepointmessages, taken the filters into account.",
                "operationId": "GetAllChargepointmessages",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources from this datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources until this datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "transactionId",
                        "in": "query",
                        "description": "Return resources with this transaction id.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "responseOnly",
                        "in": "query",
                        "description": "A flag indicating to only return responses.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "requestOnly",
                        "in": "query",
                        "description": "A flag indicating to only return requests.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "chargerToCpoOnly",
                        "in": "query",
                        "description": "A flag indicating to only return data send from the charger to the cpo.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cpoToChargerOnly",
                        "in": "query",
                        "description": "A flag indicating to only return data send from the cpo to the charger.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "messageId",
                        "in": "query",
                        "description": "Searches for messages with the this id.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/messageLogDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "chargePointId": "string",
                                        "messageId": "string",
                                        "wampMessageType": "Unknown",
                                        "ocppMessageType": "Authorize",
                                        "direction": "Unknown",
                                        "tenantId": "string",
                                        "payload": "string",
                                        "timestamp": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cdrs": {
            "get": {
                "tags": [
                    "cdrs"
                ],
                "summary": "Get a list of cdrs.",
                "description": "Get a paged list of cdrs, taken the filters into account.",
                "operationId": "GetAllCdrs",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "providerexclude",
                        "in": "query",
                        "description": "Excludes any provider from the results, use comma separated string (eg. NLLON,NLDEF).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "startdatetime",
                                "enddatetime"
                            ],
                            "type": "string",
                            "default": "startdatetime"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources from the created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources to created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cdrDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "tenantId": "string",
                                        "chargePointId": "string",
                                        "connectorId": 0,
                                        "cdrLocation": {
                                            "id": "string",
                                            "evseId": "string",
                                            "powerType": "AC_1_PHASE",
                                            "country_code": "string",
                                            "party_id": "string",
                                            "name": "string",
                                            "houseNumber": "string",
                                            "street": "string",
                                            "city": "string",
                                            "postal_code": "string",
                                            "state": "string",
                                            "country": "string",
                                            "hotline_phonenumber": "string",
                                            "coordinates": {
                                                "latitude": "string",
                                                "longitude": "string"
                                            },
                                            "time_zone": "string",
                                            "hasReimbursement": true
                                        },
                                        "startDatetime": "string",
                                        "endDateTime": "string",
                                        "sessionId": "string",
                                        "token": "string",
                                        "startedByInfo": {
                                            "tokenInfo": {
                                                "uid": "string",
                                                "authReference": "string",
                                                "tokenType": "AD_HOC_USER",
                                                "contractId": "string",
                                                "authMethod": "AUTH_REQUEST",
                                                "providerCountryCode": "string",
                                                "providerPartyId": "string",
                                                "tokenOUId": "string",
                                                "tokenOUName": "string",
                                                "tokenOU": "string"
                                            },
                                            "roamingPlatformType": "Hubject",
                                            "authorizationState": "ApprovedByRemote",
                                            "roamingPlatformConnectionId": "string",
                                            "isGuestUsage": true
                                        },
                                        "totalEnergyInKwh": 0,
                                        "totalTimeInHours": 0,
                                        "chargingPeriods": [
                                            {
                                                "timestamp": "string",
                                                "deltaKwh": 0,
                                                "absoluteKwh": 0,
                                                "price": 0
                                            }
                                        ],
                                        "totalPrice": 0,
                                        "created": "string",
                                        "lastUpdated": "string",
                                        "ou": "string",
                                        "ouId": "string",
                                        "ouName": "string",
                                        "tariffId": "string",
                                        "tariffName": "string",
                                        "startTariff": 0,
                                        "tariffPrice": 0,
                                        "priceInfo": {
                                            "startPrice": 0,
                                            "energyPrice": 0,
                                            "totalParkingTimeInMinutes": 0,
                                            "totalParkingTimeSteps": 0,
                                            "parkingTimePrice": 0,
                                            "totalChargingTimeInMinutes": 0,
                                            "totalChargingTimeSteps": 0,
                                            "chargingTimePrice": 0,
                                            "totalPrice": 0
                                        },
                                        "localStartDateTime": "string",
                                        "localEndDateTime": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,roamingadmin,basicuser,installer,helpdesk,developer,tariffeditor)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/reimbursementcdrs/{id}/recalculate": {
            "post": {
                "tags": [
                    "reimbursement"
                ],
                "summary": "Creates a recalculatereimbursementcdr.",
                "description": "Creates a new recalculatereimbursementcdr.",
                "operationId": "RecalculateReimbursementCdrPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reimbursementCdrDto"
                                },
                                "example": {
                                    "id": "string",
                                    "tenantId": "string",
                                    "chargePointId": "string",
                                    "connectorId": 0,
                                    "locationId": "string",
                                    "evseId": "string",
                                    "location": {
                                        "id": "string",
                                        "evseId": "string",
                                        "powerType": "AC_1_PHASE",
                                        "country_code": "string",
                                        "party_id": "string",
                                        "name": "string",
                                        "houseNumber": "string",
                                        "street": "string",
                                        "city": "string",
                                        "postal_code": "string",
                                        "state": "string",
                                        "country": "string",
                                        "hotline_phonenumber": "string",
                                        "coordinates": {
                                            "latitude": "string",
                                            "longitude": "string"
                                        },
                                        "time_zone": "string",
                                        "hasReimbursement": true
                                    },
                                    "startDatetime": "string",
                                    "endDateTime": "string",
                                    "sessionId": "string",
                                    "startedByInfo": {
                                        "idTag": "string",
                                        "tokenInfo": {
                                            "uid": "string",
                                            "authReference": "string",
                                            "tokenType": "AD_HOC_USER",
                                            "contractId": "string",
                                            "authMethod": "AUTH_REQUEST",
                                            "providerCountryCode": "string",
                                            "providerPartyId": "string",
                                            "tokenOUId": "string",
                                            "tokenOUName": "string",
                                            "tokenOU": "string"
                                        },
                                        "authorizationState": "ApprovedByRemote",
                                        "isGuestUsage": true
                                    },
                                    "meterStartInWh": 0,
                                    "meterStopInWh": 0,
                                    "totalEnergyInKwh": 0,
                                    "totalTimeInHours": 0,
                                    "totalPrice": 0,
                                    "created": "string",
                                    "lastUpdated": "string",
                                    "ou": "string",
                                    "ouId": "string",
                                    "ouName": "string",
                                    "reimburseTariffId": "string",
                                    "reimburseTariffName": "string",
                                    "reimburseTariffPrice": 0,
                                    "reimburseTariffCalculated": true,
                                    "reimbursePriceCalculatedOn": "string",
                                    "bankAccount": "string",
                                    "bankAccountCreatedOn": "string",
                                    "bankAccountValidFrom": "string",
                                    "reimburseTariffOriginalPrice": 0,
                                    "hasGuestChargingReimbursementFee": true,
                                    "reimburseTenantFee": 0,
                                    "tenantFeeCalculated": true,
                                    "tariffDistributionId": "string",
                                    "priceInfo": {
                                        "startPrice": 0,
                                        "energyPrice": 0,
                                        "totalParkingTimeInMinutes": 0,
                                        "totalParkingTimeSteps": 0,
                                        "parkingTimePrice": 0,
                                        "totalChargingTimeInMinutes": 0,
                                        "totalChargingTimeSteps": 0,
                                        "chargingTimePrice": 0,
                                        "totalPrice": 0
                                    },
                                    "customerShare": 0,
                                    "energyCompensation": 0,
                                    "reimbursementCustomerShare": {
                                        "customerShare": 0,
                                        "energyCompensation": 0,
                                        "tenantFee": 0
                                    },
                                    "localStartDateTime": "string",
                                    "localEndDateTime": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,roamingadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/cdrs/export": {
            "get": {
                "tags": [
                    "cdrs"
                ],
                "summary": "Get a list of interchangeformat.",
                "description": "Get a paged list of interchangeformat, taken the filters into account.",
                "operationId": "GetAllInterchangeformat",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "providerexclude",
                        "in": "query",
                        "description": "Excludes any provider from the results, use comma separated string (eg. NLLON,NLDEF).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources from the created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return resources to created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/interchangeFormatCdrArray"
                                },
                                "example": [
                                    {
                                        "cdrId": "string",
                                        "startDateTime": "string",
                                        "endDateTime": "string",
                                        "duration": "string",
                                        "volume": 0,
                                        "chargePointAddress": "string",
                                        "chargePointZip": "string",
                                        "chargePointCity": "string",
                                        "chargePointCountry": "string",
                                        "chargePointType": "string",
                                        "productType": "string",
                                        "tariffType": "string",
                                        "authenticationId": "string",
                                        "contractId": "string",
                                        "meterId": "string",
                                        "obisCode": "string",
                                        "chargePointId": "string",
                                        "serviceProviderId": "string",
                                        "infraProviderId": "string",
                                        "calculatedCost": 0
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk,developer)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/reservenow": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a ReserveNowRequest.",
                "description": "Sends a ReserveNowRequest command to the chargepoint.",
                "operationId": "SendReserveNowRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ReserveNowRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/reserveNowRequest"
                            },
                            "example": {
                                "connectorId": 0,
                                "expiryDate": "string",
                                "idTag": "string",
                                "parentIdTag": "string",
                                "reservationId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/cancelreservation": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a CancelReservationRequest.",
                "description": "Sends a CancelReservationRequest command to the chargepoint.",
                "operationId": "SendCancelReservationRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The CancelReservationRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/cancelReservationRequest"
                            },
                            "example": {
                                "reservationId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/localtokengroups": {
            "get": {
                "tags": [
                    "localtokengroups"
                ],
                "summary": "Get a list of localtokengroups.",
                "description": "Get a paged list of localtokengroups, taken the filters into account.",
                "operationId": "GetAllLocaltokengroups",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/localTokenGroupGetDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "oucode": "string",
                                        "tokenGroupName": "string",
                                        "targetOUCodes": [
                                            "string"
                                        ],
                                        "tokens": [
                                            {
                                                "isValid": true,
                                                "name": "string",
                                                "uid": "string",
                                                "contractId": "string",
                                                "normalizedContractId": "string"
                                            }
                                        ],
                                        "targetChargepointIds": [
                                            "string"
                                        ],
                                        "created": "string",
                                        "updated": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "localtokengroups"
                ],
                "summary": "Creates a localtokengroup.",
                "description": "Creates a new localtokengroup.",
                "operationId": "LocalTokenGroupPost",
                "requestBody": {
                    "description": "The LocalTokenGroupPostDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/localTokenGroupPostDto"
                            },
                            "example": {
                                "oucode": "string",
                                "tokenGroupName": "string",
                                "targetOUCodes": [
                                    "string"
                                ],
                                "tokens": [
                                    {
                                        "isValid": true,
                                        "name": "string",
                                        "uid": "string",
                                        "contractId": "string"
                                    }
                                ],
                                "targetChargepointIds": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/localtokengroups/{id}": {
            "get": {
                "tags": [
                    "localtokengroups"
                ],
                "summary": "Gets the LocalTokenGroup.",
                "description": "Gets the LocalTokenGroup base on the id.",
                "operationId": "LocaltokengroupGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/localTokenGroupGetDto"
                                },
                                "example": {
                                    "id": "string",
                                    "oucode": "string",
                                    "tokenGroupName": "string",
                                    "targetOUCodes": [
                                        "string"
                                    ],
                                    "tokens": [
                                        {
                                            "isValid": true,
                                            "name": "string",
                                            "uid": "string",
                                            "contractId": "string",
                                            "normalizedContractId": "string"
                                        }
                                    ],
                                    "targetChargepointIds": [
                                        "string"
                                    ],
                                    "created": "string",
                                    "updated": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "localtokengroups"
                ],
                "summary": "Deletes a localtokengroup.",
                "description": "Deletes a localtokengroup.",
                "operationId": "LocalTokenGroupDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Request was successful.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "localtokengroups"
                ],
                "summary": "Updates a localtokengroup.",
                "description": "Updates a localtokengroup.",
                "operationId": "LocalTokenGroupPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The LocalTokenGroupPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/localTokenGroupPutDto"
                            },
                            "example": {
                                "oucode": "string",
                                "tokenGroupName": "string",
                                "targetOUCodes": [
                                    "string"
                                ],
                                "tokens": [
                                    {
                                        "isValid": true,
                                        "name": "string",
                                        "uid": "string",
                                        "contractId": "string"
                                    }
                                ],
                                "targetChargepointIds": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/webhooks/{id}": {
            "delete": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Deletes a webhook.",
                "description": "Deletes a webhook.",
                "operationId": "webhookDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Request was successful.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Gets the webhook.",
                "description": "Gets the webhook base on the id.",
                "operationId": "WebhookGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/webhookGetDto"
                                },
                                "example": {
                                    "id": "string",
                                    "name": "string",
                                    "ouCode": "string",
                                    "enabled": true,
                                    "eventTypes": [
                                        "SESSION_START"
                                    ],
                                    "headers": [
                                        {
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "url": "string",
                                    "created": "string",
                                    "updated": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,developer)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Updates a webhook.",
                "description": "Updates a webhook.",
                "operationId": "webhookPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The WebhookPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/webhookPutDto"
                            },
                            "example": {
                                "name": "string",
                                "ouCode": "string",
                                "url": "string",
                                "enabled": true,
                                "eventTypes": [
                                    "SESSION_START"
                                ],
                                "headers": [
                                    {
                                        "name": "string",
                                        "value": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/webhookGetDto"
                                },
                                "example": {
                                    "id": "string",
                                    "name": "string",
                                    "ouCode": "string",
                                    "enabled": true,
                                    "eventTypes": [
                                        "SESSION_START"
                                    ],
                                    "headers": [
                                        {
                                            "name": "string",
                                            "value": "string"
                                        }
                                    ],
                                    "url": "string",
                                    "created": "string",
                                    "updated": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/webhooks": {
            "get": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Get a list of webhooks.",
                "description": "Get a paged list of webhooks, taken the filters into account.",
                "operationId": "GetAllWebhooks",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "name"
                            ],
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/webhookSummaryGetDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "name": "string",
                                        "enabled": true,
                                        "eventTypes": [
                                            "SESSION_START"
                                        ],
                                        "created": "string",
                                        "updated": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,developer)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "webhooks"
                ],
                "summary": "Creates a webhook.",
                "description": "Creates a new webhook.",
                "operationId": "webhookPost",
                "requestBody": {
                    "description": "The WebhookPostDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/webhookPostDto"
                            },
                            "example": {
                                "name": "string",
                                "ouCode": "string",
                                "enabled": true,
                                "eventTypes": [
                                    "SESSION_START"
                                ],
                                "headers": [
                                    {
                                        "name": "string",
                                        "value": "string"
                                    }
                                ],
                                "url": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource with this id already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/unlockconnector": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a UnlockConnectorRequest.",
                "description": "Sends a UnlockConnectorRequest command to the chargepoint.",
                "operationId": "SendUnlockConnectorRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The UnlockConnectorRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/unlockConnectorRequest"
                            },
                            "example": {
                                "connectorId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/tariffs": {
            "post": {
                "tags": [
                    "tariffs"
                ],
                "summary": "Creates a tariff.",
                "description": "Creates a new tariff.",
                "operationId": "TariffPost",
                "requestBody": {
                    "description": "The TariffPostDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tariffPostDto"
                            },
                            "example": {
                                "name": "string",
                                "currency": "string",
                                "usageType": "SELL",
                                "privateEmpTariff": {
                                    "country_code": "string",
                                    "party_id": "string",
                                    "powerType": "AC",
                                    "usePublicTariffWhenKwhIsCheaper": true
                                },
                                "startTariff": 0,
                                "price": 0,
                                "parkingTariff": 0,
                                "parkingStepSizeInMinutes": 0,
                                "parkingGracePeriodInMinutes": 0,
                                "timeTariff": 0,
                                "timeStepSizeInMinutes": 0,
                                "timeGracePeriodInMinutes": 0,
                                "externalReference": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource with this id already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tariffs"
                ],
                "summary": "Get a list of tariffs.",
                "description": "Get a paged list of tariffs, taken the filters into account.",
                "operationId": "GetAllTariffs",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "Orders the resultset by the property.",
                        "schema": {
                            "enum": [
                                "name",
                                "kwH_PRICE",
                                "starT_PRICE"
                            ],
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "descending",
                        "in": "query",
                        "description": "When true, orders resultset descending.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tariffDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "ocpiId": "string",
                                        "hubjectId": "string",
                                        "tenantId": "string",
                                        "name": "string",
                                        "startTariff": 0,
                                        "price": 0,
                                        "priceInclVat": 0,
                                        "currency": "string",
                                        "last_updated": "string",
                                        "usageType": "SELL",
                                        "tariffType": "AD_HOC_PAYMENT",
                                        "vat": 0,
                                        "isVatRelevant": true,
                                        "country_code": "string",
                                        "party_id": "string",
                                        "locationId": "string",
                                        "isPrivateEmpTariff": true,
                                        "privateEmpTariff": {
                                            "country_code": "string",
                                            "party_id": "string",
                                            "powerType": "AC",
                                            "usePublicTariffWhenKwhIsCheaper": true
                                        },
                                        "parkingTariff": 0,
                                        "parkingStepSizeInMinutes": 0,
                                        "parkingGracePeriodInMinutes": 0,
                                        "timeTariff": 0,
                                        "timeStepSizeInMinutes": 0,
                                        "timeGracePeriodInMinutes": 0,
                                        "priceHistory": [
                                            {
                                                "createdTimestamp": "string",
                                                "validFrom": "string",
                                                "startTariff": 0,
                                                "pricePerKwh": 0,
                                                "pricePerKwhInclVat": 0,
                                                "isVatRelevant": true,
                                                "parkingTariff": 0,
                                                "parkingStepSizeInMinutes": 0,
                                                "parkingGracePeriodInMinutes": 0,
                                                "timeTariff": 0,
                                                "timeStepSizeInMinutes": 0,
                                                "timeGracePeriodInMinutes": 0,
                                                "approvalStatus": "PENDING"
                                            }
                                        ],
                                        "externalReference": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tariffs/{id}": {
            "put": {
                "tags": [
                    "tariffs"
                ],
                "summary": "Updates a tariff.",
                "description": "Updates a tariff.",
                "operationId": "TariffPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TariffPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tariffPutDto"
                            },
                            "example": {
                                "name": "string",
                                "hubjectId": "string",
                                "privateEmpTariff": {
                                    "country_code": "string",
                                    "party_id": "string",
                                    "powerType": "AC",
                                    "usePublicTariffWhenKwhIsCheaper": true
                                },
                                "startTariff": 0,
                                "price": 0,
                                "parkingTariff": 0,
                                "parkingStepSizeInMinutes": 0,
                                "parkingGracePeriodInMinutes": 0,
                                "timeTariff": 0,
                                "timeStepSizeInMinutes": 0,
                                "timeGracePeriodInMinutes": 0,
                                "externalReference": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Resource with this id already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "tariffs"
                ],
                "summary": "Gets the Tariff.",
                "description": "Gets the Tariff base on the id.",
                "operationId": "TariffGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tariffDto"
                                },
                                "example": {
                                    "id": "string",
                                    "ocpiId": "string",
                                    "hubjectId": "string",
                                    "tenantId": "string",
                                    "name": "string",
                                    "startTariff": 0,
                                    "price": 0,
                                    "priceInclVat": 0,
                                    "currency": "string",
                                    "last_updated": "string",
                                    "usageType": "SELL",
                                    "tariffType": "AD_HOC_PAYMENT",
                                    "vat": 0,
                                    "isVatRelevant": true,
                                    "country_code": "string",
                                    "party_id": "string",
                                    "locationId": "string",
                                    "isPrivateEmpTariff": true,
                                    "privateEmpTariff": {
                                        "country_code": "string",
                                        "party_id": "string",
                                        "powerType": "AC",
                                        "usePublicTariffWhenKwhIsCheaper": true
                                    },
                                    "parkingTariff": 0,
                                    "parkingStepSizeInMinutes": 0,
                                    "parkingGracePeriodInMinutes": 0,
                                    "timeTariff": 0,
                                    "timeStepSizeInMinutes": 0,
                                    "timeGracePeriodInMinutes": 0,
                                    "priceHistory": [
                                        {
                                            "createdTimestamp": "string",
                                            "validFrom": "string",
                                            "startTariff": 0,
                                            "pricePerKwh": 0,
                                            "pricePerKwhInclVat": 0,
                                            "isVatRelevant": true,
                                            "parkingTariff": 0,
                                            "parkingStepSizeInMinutes": 0,
                                            "parkingGracePeriodInMinutes": 0,
                                            "timeTariff": 0,
                                            "timeStepSizeInMinutes": 0,
                                            "timeGracePeriodInMinutes": 0,
                                            "approvalStatus": "PENDING"
                                        }
                                    ],
                                    "externalReference": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/locations/{id}/chargepoints/{chargePointId}": {
            "delete": {
                "tags": [
                    "locations"
                ],
                "summary": "Deletes a relation between location and charge point.",
                "description": "Deletes a relation between location and charge point.",
                "operationId": "relation-between-location-and-charge-pointDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "chargePointId",
                        "in": "path",
                        "description": "Id of the chargePoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/locations/{id}/chargepoints": {
            "post": {
                "tags": [
                    "locations"
                ],
                "summary": "Creates a relation between location and charge point.",
                "description": "Creates a new relation between location and charge point.",
                "operationId": "relation-between-location-and-charge-pointPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The LocationChargePointDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/locationChargePointDto"
                            },
                            "example": {
                                "chargePointId": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Content was not in the correct format.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/updatefirmware": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a UpdateFirmwareRequest.",
                "description": "Sends a UpdateFirmwareRequest command to the chargepoint.",
                "operationId": "SendUpdateFirmwareRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The UpdateFirmwareRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updateFirmwareRequest"
                            },
                            "example": {
                                "location": "string",
                                "retries": 0,
                                "retrieveDate": "string",
                                "retryInterval": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/triggermessage": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a TriggerMessageRequest.",
                "description": "Sends a TriggerMessageRequest command to the chargepoint.",
                "operationId": "SendTriggerMessageRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TriggerMessageRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/triggerMessageRequest"
                            },
                            "example": {
                                "requestedMessage": "BootNotification",
                                "connectorId": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/getlocallistversion": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a GetLocalListVersionRequest.",
                "description": "Sends a GetLocalListVersionRequest command to the chargepoint.",
                "operationId": "SendGetLocalListVersionRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The GetLocalListVersionRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getLocalListVersionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/getdiagnostics": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a GetDiagnosticsRequest.",
                "description": "Sends a GetDiagnosticsRequest command to the chargepoint.",
                "operationId": "SendGetDiagnosticsRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The GetDiagnosticsRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getDiagnosticsRequest"
                            },
                            "example": {
                                "location": "string",
                                "retries": 0,
                                "retryInterval": 0,
                                "startTime": "string",
                                "stopTime": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/getconfiguration": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a GetConfigurationRequest.",
                "description": "Sends a GetConfigurationRequest command to the chargepoint.",
                "operationId": "SendGetConfigurationRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The GetConfigurationRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConfigurationRequest"
                            },
                            "example": {
                                "key": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/datatransfer": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a DataTransferRequest.",
                "description": "Sends a DataTransferRequest command to the chargepoint.",
                "operationId": "SendDataTransferRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The DataTransferRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dataTransferRequest"
                            },
                            "example": {
                                "vendorId": "string",
                                "messageId": "string",
                                "data": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/changeconfiguration": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a ChangeConfigurationRequest.",
                "description": "Sends a ChangeConfigurationRequest command to the chargepoint.",
                "operationId": "SendChangeConfigurationRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ChangeConfigurationRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changeConfigurationRequest"
                            },
                            "example": {
                                "key": "string",
                                "value": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/changeavailability": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a ChangeAvailabilityRequest.",
                "description": "Sends a ChangeAvailabilityRequest command to the chargepoint.",
                "operationId": "SendChangeAvailabilityRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ChangeAvailabilityRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changeAvailabilityRequest"
                            },
                            "example": {
                                "connectorId": 0,
                                "type": "Inoperative"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/cdrs/full-download": {
            "get": {
                "tags": [
                    "cdrs"
                ],
                "summary": "Gets a file of full-download cdrs.",
                "description": "Gets a file of full-download cdrs, taken the filters into account.",
                "operationId": "GetFileFull-Download-Cdrs",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return CDRs from the created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return CDRs to created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a binary file matching the specified filters.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/fileContentResult"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fileContentResult"
                                },
                                "example": {
                                    "fileContents": "string",
                                    "contentType": "string",
                                    "fileDownloadName": "string",
                                    "lastModified": "string",
                                    "entityTag": {
                                        "tag": {
                                            "buffer": "string",
                                            "offset": 0,
                                            "length": 0,
                                            "value": "string",
                                            "hasValue": true
                                        },
                                        "isWeak": true
                                    },
                                    "enableRangeProcessing": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk,developer)",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/cdrs/download": {
            "get": {
                "tags": [
                    "cdrs"
                ],
                "summary": "Gets a file of intercharge cdrs.",
                "description": "Gets a file of intercharge cdrs, taken the filters into account.",
                "operationId": "GetFileIntercharge-Cdrs",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return CDRs from the created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Return CDRs to created datetime.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a binary file matching the specified filters.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/fileContentResult"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fileContentResult"
                                },
                                "example": {
                                    "fileContents": "string",
                                    "contentType": "string",
                                    "fileDownloadName": "string",
                                    "lastModified": "string",
                                    "entityTag": {
                                        "tag": {
                                            "buffer": "string",
                                            "offset": 0,
                                            "length": 0,
                                            "value": "string",
                                            "hasValue": true
                                        },
                                        "isWeak": true
                                    },
                                    "enableRangeProcessing": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,helpdesk,developer)",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "examples": {
                                    "default": {
                                        "value": null
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tariffdistributions": {
            "get": {
                "tags": [
                    "tariffdistributions"
                ],
                "summary": "Get a list of tariffdistributions.",
                "description": "Get a paged list of tariffdistributions, taken the filters into account.",
                "operationId": "GetAllTariffdistributions",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Format - int32. Skip the first defined amount of resources.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "Format - int32. Take a number of resources, but note that you can never get more than 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Searches for resources with the string, but note that not all fields are indexed.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "headers": {
                            "Link": {
                                "description": "The url where the next page can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tariffDistributionGetDtoArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "name": "string",
                                        "ouCode": "string",
                                        "energyCompensation": 0,
                                        "fixedTenantKWhFee": 0,
                                        "percentageFeeCustomer": 0,
                                        "percentageFeeTenant": 0,
                                        "priceHistory": [
                                            {
                                                "validFrom": "string",
                                                "energyCompensation": 0,
                                                "fixedTenantKWhFee": 0,
                                                "percentageFeeCustomer": 0,
                                                "percentageFeeTenant": 0
                                            }
                                        ],
                                        "created": "string",
                                        "deleted": "string",
                                        "updated": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,basicuser,installer,developer,helpdesk,tariffeditor,roamingadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tariffdistributions"
                ],
                "summary": "Creates a tariffdistribution.",
                "description": "Creates a new tariffdistribution.",
                "operationId": "tariffdistributionPost",
                "requestBody": {
                    "description": "The TariffDistributionPostDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tariffDistributionPostDto"
                            },
                            "example": {
                                "name": "string",
                                "ouCode": "string",
                                "energyCompensation": 0,
                                "fixedTenantKWhFee": 0,
                                "percentageFeeCustomer": 0,
                                "percentageFeeTenant": 0
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Resource was created.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/tariffdistributions/{id}": {
            "get": {
                "tags": [
                    "tariffdistributions"
                ],
                "summary": "Gets the tariffdistribution.",
                "description": "Gets the tariffdistribution base on the id.",
                "operationId": "TariffdistributionGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tariffDistributionGetDto"
                                },
                                "example": {
                                    "id": "string",
                                    "name": "string",
                                    "ouCode": "string",
                                    "energyCompensation": 0,
                                    "fixedTenantKWhFee": 0,
                                    "percentageFeeCustomer": 0,
                                    "percentageFeeTenant": 0,
                                    "priceHistory": [
                                        {
                                            "validFrom": "string",
                                            "energyCompensation": 0,
                                            "fixedTenantKWhFee": 0,
                                            "percentageFeeCustomer": 0,
                                            "percentageFeeTenant": 0
                                        }
                                    ],
                                    "created": "string",
                                    "deleted": "string",
                                    "updated": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "tariffdistributions"
                ],
                "summary": "Updates a tariffdistribution.",
                "description": "Updates a tariffdistribution.",
                "operationId": "tariffdistributionPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The TariffDistributionPutDto payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tariffDistributionPutDto"
                            },
                            "example": {
                                "name": "string",
                                "ouCode": "string",
                                "energyCompensation": 0,
                                "fixedTenantKWhFee": 0,
                                "percentageFeeCustomer": 0,
                                "percentageFeeTenant": 0
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns all resources matching the specified filters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tariffDistributionGetDto"
                                },
                                "example": {
                                    "id": "string",
                                    "name": "string",
                                    "ouCode": "string",
                                    "energyCompensation": 0,
                                    "fixedTenantKWhFee": 0,
                                    "percentageFeeCustomer": 0,
                                    "percentageFeeTenant": 0,
                                    "priceHistory": [
                                        {
                                            "validFrom": "string",
                                            "energyCompensation": 0,
                                            "fixedTenantKWhFee": 0,
                                            "percentageFeeCustomer": 0,
                                            "percentageFeeTenant": 0
                                        }
                                    ],
                                    "created": "string",
                                    "deleted": "string",
                                    "updated": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The data provided was incorrect.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The specified resource, or one of the related resources could not be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/sendlocallist": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a SendLocalListRequest.",
                "description": "Sends a SendLocalListRequest command to the chargepoint.",
                "operationId": "SendSendLocalListRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The SendLocalListRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sendLocalListRequest"
                            },
                            "example": {
                                "listVersion": 0,
                                "localAuthorizationList": [
                                    {
                                        "idTag": "string",
                                        "idTagInfo": {
                                            "expiryDate": "string",
                                            "parentIdTag": "string",
                                            "status": "Accepted"
                                        }
                                    }
                                ],
                                "updateType": "Differential"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/v1/chargepoints/{id}/clearcache": {
            "post": {
                "tags": [
                    "commands"
                ],
                "summary": "Sends a ClearCacheRequest.",
                "description": "Sends a ClearCacheRequest command to the chargepoint.",
                "operationId": "SendClearCacheRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the chargepoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The ClearCacheRequest payload.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clearCacheRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "The provided credentials are not authorized to call this API.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "A problem within the Longship system occured, use the referenceId when contacting our support team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request tried to access resources that were not allowed for the provided credentials. (allowed roles: tenantadmin,installer,helpdesk)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/longshipError"
                                },
                                "example": {
                                    "code": "string",
                                    "errorDetails": {
                                        "message": "string",
                                        "referenceId": "string"
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Request was handled correctly.",
                        "headers": {
                            "Location": {
                                "description": "The url where the new resource can be fetched.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "additionalGeoLocationDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    },
                    "name": {
                        "$ref": "#/components/schemas/displayTextDto"
                    }
                }
            },
            "authorizationData": {
                "required": [
                    "idTag"
                ],
                "type": "object",
                "properties": {
                    "idTag": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "idTagInfo": {
                        "$ref": "#/components/schemas/idTagInfo"
                    }
                }
            },
            "businessDetailsDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "image": {
                        "$ref": "#/components/schemas/imageDto"
                    }
                }
            },
            "cancelReservationRequest": {
                "required": [
                    "reservationId"
                ],
                "type": "object",
                "properties": {
                    "reservationId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "cdrDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "chargePointId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cdrLocation": {
                        "$ref": "#/components/schemas/cdrLocationDto"
                    },
                    "startDatetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "startedByInfo": {
                        "$ref": "#/components/schemas/cdrStartedByInfoDto"
                    },
                    "totalEnergyInKwh": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalTimeInHours": {
                        "type": "number",
                        "format": "double"
                    },
                    "chargingPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chargingPeriodDto"
                        }
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    },
                    "tariffId": {
                        "type": "string"
                    },
                    "tariffName": {
                        "type": "string"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "tariffPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "priceInfo": {
                        "$ref": "#/components/schemas/priceInfoDto"
                    },
                    "localStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "localEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "cdrGeoLocationDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                }
            },
            "cdrLocationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "evseId": {
                        "type": "string"
                    },
                    "powerType": {
                        "enum": [
                            "AC_1_PHASE",
                            "AC_3_PHASE",
                            "DC"
                        ],
                        "type": "string",
                        "default": "AC_1_PHASE"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "hotline_phonenumber": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/cdrGeoLocationDto"
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "hasReimbursement": {
                        "type": "boolean"
                    }
                }
            },
            "cdrStartedByInfoDto": {
                "type": "object",
                "properties": {
                    "tokenInfo": {
                        "$ref": "#/components/schemas/cdrStartedByTokenDto"
                    },
                    "roamingPlatformType": {
                        "enum": [
                            "Hubject",
                            "Ocpi"
                        ],
                        "type": "string",
                        "default": "Hubject"
                    },
                    "authorizationState": {
                        "enum": [
                            "ApprovedByRemote",
                            "ApprovedByLocalToken",
                            "ApprovedByAllowAny",
                            "ApprovedByRoamingPartner",
                            "ApprovedByAuthRequest",
                            "WaitingForRemoteStop",
                            "ErrorUnkownRemoteToken",
                            "ErrorInvalidLocalToken",
                            "ErrorNoLocalOrRemoteApproval",
                            "ErrorNoRoamingApproval"
                        ],
                        "type": "string",
                        "default": "ApprovedByRemote"
                    },
                    "roamingPlatformConnectionId": {
                        "type": "string"
                    },
                    "isGuestUsage": {
                        "type": "boolean"
                    }
                }
            },
            "cdrStartedByTokenDto": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string"
                    },
                    "authReference": {
                        "type": "string"
                    },
                    "tokenType": {
                        "enum": [
                            "AD_HOC_USER",
                            "APP_USER",
                            "OTHER",
                            "RFID"
                        ],
                        "type": "string",
                        "default": "AD_HOC_USER"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "authMethod": {
                        "enum": [
                            "AUTH_REQUEST",
                            "COMMAND",
                            "WHITELIST"
                        ],
                        "type": "string",
                        "default": "AUTH_REQUEST"
                    },
                    "providerCountryCode": {
                        "type": "string"
                    },
                    "providerPartyId": {
                        "type": "string"
                    },
                    "tokenOUId": {
                        "type": "string"
                    },
                    "tokenOUName": {
                        "type": "string"
                    },
                    "tokenOU": {
                        "type": "string"
                    }
                }
            },
            "changeAvailabilityRequest": {
                "required": [
                    "connectorId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "enum": [
                            "Inoperative",
                            "Operative"
                        ],
                        "type": "string",
                        "default": "Inoperative"
                    }
                }
            },
            "changeConfigurationRequest": {
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "value": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "chargepointConnectorDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "operationalStatus": {
                        "enum": [
                            "Available",
                            "Preparing",
                            "Charging",
                            "SuspendedEVSE",
                            "SuspendedEV",
                            "Finishing",
                            "Reserved",
                            "Unavailable",
                            "Faulted"
                        ],
                        "type": "string",
                        "default": "Available"
                    },
                    "standard": {
                        "enum": [
                            "CHADEMO",
                            "DOMESTIC_A",
                            "DOMESTIC_B",
                            "DOMESTIC_C",
                            "DOMESTIC_D",
                            "DOMESTIC_E",
                            "DOMESTIC_F",
                            "DOMESTIC_G",
                            "DOMESTIC_H",
                            "DOMESTIC_I",
                            "DOMESTIC_J",
                            "DOMESTIC_K",
                            "DOMESTIC_L",
                            "IEC_60309_2_single_16",
                            "IEC_60309_2_three_16",
                            "IEC_60309_2_three_32",
                            "IEC_60309_2_three_64",
                            "IEC_62196_T1",
                            "IEC_62196_T1_COMBO",
                            "IEC_62196_T2",
                            "IEC_62196_T2_COMBO",
                            "IEC_62196_T3A",
                            "IEC_62196_T3C",
                            "PANTOGRAPH_BOTTOM_UP",
                            "PANTOGRAPH_TOP_DOWN",
                            "TESLA_R",
                            "TESLA_S"
                        ],
                        "type": "string",
                        "default": "CHADEMO"
                    },
                    "format": {
                        "enum": [
                            "SOCKET",
                            "CABLE"
                        ],
                        "type": "string",
                        "default": "SOCKET"
                    },
                    "powerType": {
                        "enum": [
                            "AC_1_PHASE",
                            "AC_3_PHASE",
                            "DC"
                        ],
                        "type": "string",
                        "default": "AC_1_PHASE"
                    },
                    "maxVoltage": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxAmperage": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxElectricPower": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "chargepointDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "chargePointId": {
                        "type": "string"
                    },
                    "dateDeleted": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "roamingName": {
                        "type": "string"
                    },
                    "chargeBoxSerialNumber": {
                        "type": "string"
                    },
                    "chargePointModel": {
                        "type": "string"
                    },
                    "chargePointSerialNumber": {
                        "type": "string"
                    },
                    "chargePointVendor": {
                        "type": "string"
                    },
                    "firmwareVersion": {
                        "type": "string"
                    },
                    "connectivityStatus": {
                        "enum": [
                            "ONLINE",
                            "OFFLINE"
                        ],
                        "type": "string",
                        "default": "ONLINE"
                    },
                    "iccid": {
                        "type": "string"
                    },
                    "imsi": {
                        "type": "string"
                    },
                    "meterSerialNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "meterType": {
                        "type": "string",
                        "nullable": true
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "evses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chargepointEVSEDto"
                        }
                    },
                    "isRoaming": {
                        "type": "boolean"
                    },
                    "hasGuestUsage": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "allowAnyToken": {
                        "type": "boolean"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    },
                    "tariffId": {
                        "type": "string"
                    },
                    "tariffName": {
                        "type": "string",
                        "nullable": true
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "tariffPrice": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "simCardNumber": {
                        "type": "string"
                    },
                    "tokenGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "isNew": {
                        "type": "boolean"
                    },
                    "hasReimbursement": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "reimburseTariffId": {
                        "type": "string",
                        "nullable": true
                    },
                    "reimburseTariffName": {
                        "type": "string",
                        "nullable": true
                    },
                    "reimburseTariffPrice": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "reimburseUID": {
                        "type": "string",
                        "nullable": true
                    },
                    "reimburseTokenId": {
                        "type": "string",
                        "nullable": true
                    },
                    "reimburseOU": {
                        "type": "string",
                        "nullable": true
                    },
                    "useTenantFee": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "maxCapacityInKw": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "chargepointEVSEDto": {
                "type": "object",
                "properties": {
                    "evse_id": {
                        "type": "string"
                    },
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chargepointConnectorDto"
                        }
                    }
                }
            },
            "chargepointPutDto": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "roamingName": {
                        "type": "string"
                    },
                    "allowAnyToken": {
                        "type": "boolean"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "tariffId": {
                        "type": "string"
                    },
                    "simCardNumber": {
                        "type": "string"
                    },
                    "isNew": {
                        "type": "boolean"
                    },
                    "maxCapacityInKw": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "chargepointStatusDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "connectivityStatus": {
                        "enum": [
                            "ONLINE",
                            "OFFLINE"
                        ],
                        "type": "string",
                        "default": "ONLINE"
                    },
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectorOperationalStatusDto"
                        }
                    },
                    "websocketConnected": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "websocketDisconnected": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "chargingMeterValueDto": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "value": {
                        "type": "string"
                    },
                    "measurand": {
                        "enum": [
                            "Energy.Active.Export.Register",
                            "Energy.Active.Import.Register",
                            "Energy.Reactive.Export.Register",
                            "Energy.Reactive.Import.Register",
                            "Energy.Active.Export.Interval",
                            "Energy.Active.Import.Interval",
                            "Energy.Reactive.Export.Interval",
                            "Energy.Reactive.Import.Interval",
                            "Power.Active.Export",
                            "Power.Active.Import",
                            "Power.Offered",
                            "Power.Reactive.Export",
                            "Power.Reactive.Import",
                            "Power.Factor",
                            "Current.Import",
                            "Current.Export",
                            "Current.Offered",
                            "Voltage",
                            "Frequency",
                            "Temperature",
                            "SoC",
                            "RPM"
                        ],
                        "type": "string",
                        "default": "Energy.Active.Export.Register"
                    },
                    "unit": {
                        "enum": [
                            "Wh",
                            "kWh",
                            "varh",
                            "kvarh",
                            "W",
                            "kW",
                            "VA",
                            "kVA",
                            "var",
                            "kvar",
                            "A",
                            "V",
                            "K",
                            "Celcius",
                            "Fahrenheit",
                            "Percent"
                        ],
                        "type": "string",
                        "default": "Wh"
                    }
                }
            },
            "chargingPeriodDto": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deltaKwh": {
                        "type": "number",
                        "format": "double"
                    },
                    "absoluteKwh": {
                        "type": "number",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "chargingProfile": {
                "required": [
                    "chargingProfileId",
                    "stackLevel",
                    "chargingProfilePurpose",
                    "chargingProfileKind",
                    "chargingSchedule"
                ],
                "type": "object",
                "properties": {
                    "chargingProfileId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transactionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stackLevel": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargingProfilePurpose": {
                        "enum": [
                            "ChargePointMaxProfile",
                            "TxDefaultProfile",
                            "TxProfile"
                        ],
                        "type": "string",
                        "default": "ChargePointMaxProfile"
                    },
                    "chargingProfileKind": {
                        "enum": [
                            "Absolute",
                            "Recurring",
                            "Relative"
                        ],
                        "type": "string",
                        "default": "Absolute"
                    },
                    "recurrencyKind": {
                        "enum": [
                            "Daily",
                            "Weekly"
                        ],
                        "type": "string",
                        "default": "Daily"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "chargingSchedule": {
                        "$ref": "#/components/schemas/chargingSchedule"
                    }
                }
            },
            "chargingSchedule": {
                "required": [
                    "chargingRateUnit",
                    "chargingSchedulePeriod"
                ],
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startSchedule": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "chargingRateUnit": {
                        "enum": [
                            "A",
                            "W"
                        ],
                        "type": "string",
                        "default": "A"
                    },
                    "chargingSchedulePeriod": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chargingSchedulePeriod"
                        }
                    },
                    "minChargingRate": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "chargingSchedulePeriod": {
                "required": [
                    "startPeriod",
                    "limit"
                ],
                "type": "object",
                "properties": {
                    "startPeriod": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "number",
                        "format": "double"
                    },
                    "numberPhases": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "clearCacheRequest": {
                "type": "object"
            },
            "clearChargingProfileRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargingProfilePurpose": {
                        "enum": [
                            "ChargePointMaxProfile",
                            "TxDefaultProfile",
                            "TxProfile"
                        ],
                        "type": "string",
                        "default": "ChargePointMaxProfile"
                    },
                    "stackLevel": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "connectorDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "standard": {
                        "enum": [
                            "CHADEMO",
                            "DOMESTIC_A",
                            "DOMESTIC_B",
                            "DOMESTIC_C",
                            "DOMESTIC_D",
                            "DOMESTIC_E",
                            "DOMESTIC_F",
                            "DOMESTIC_G",
                            "DOMESTIC_H",
                            "DOMESTIC_I",
                            "DOMESTIC_J",
                            "DOMESTIC_K",
                            "DOMESTIC_L",
                            "IEC_60309_2_single_16",
                            "IEC_60309_2_three_16",
                            "IEC_60309_2_three_32",
                            "IEC_60309_2_three_64",
                            "IEC_62196_T1",
                            "IEC_62196_T1_COMBO",
                            "IEC_62196_T2",
                            "IEC_62196_T2_COMBO",
                            "IEC_62196_T3A",
                            "IEC_62196_T3C",
                            "PANTOGRAPH_BOTTOM_UP",
                            "PANTOGRAPH_TOP_DOWN",
                            "TESLA_R",
                            "TESLA_S"
                        ],
                        "type": "string",
                        "default": "CHADEMO"
                    },
                    "format": {
                        "enum": [
                            "SOCKET",
                            "CABLE"
                        ],
                        "type": "string",
                        "default": "SOCKET"
                    },
                    "power_type": {
                        "enum": [
                            "AC_1_PHASE",
                            "AC_3_PHASE",
                            "DC"
                        ],
                        "type": "string",
                        "default": "AC_1_PHASE"
                    },
                    "max_voltage": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_amperage": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_electric_power": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "calc_max_electric_power": {
                        "type": "boolean"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "connectorOperationalStatusDto": {
                "type": "object",
                "properties": {
                    "connectorNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationalStatus": {
                        "enum": [
                            "Available",
                            "Preparing",
                            "Charging",
                            "SuspendedEVSE",
                            "SuspendedEV",
                            "Finishing",
                            "Reserved",
                            "Unavailable",
                            "Faulted"
                        ],
                        "type": "string",
                        "default": "Available"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "csChargingProfiles": {
                "required": [
                    "chargingProfileId",
                    "stackLevel",
                    "chargingProfilePurpose",
                    "chargingProfileKind",
                    "chargingSchedule"
                ],
                "type": "object",
                "properties": {
                    "chargingProfileId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transactionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stackLevel": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargingProfilePurpose": {
                        "enum": [
                            "ChargePointMaxProfile",
                            "TxDefaultProfile",
                            "TxProfile"
                        ],
                        "type": "string",
                        "default": "ChargePointMaxProfile"
                    },
                    "chargingProfileKind": {
                        "enum": [
                            "Absolute",
                            "Recurring",
                            "Relative"
                        ],
                        "type": "string",
                        "default": "Absolute"
                    },
                    "recurrencyKind": {
                        "enum": [
                            "Daily",
                            "Weekly"
                        ],
                        "type": "string",
                        "default": "Daily"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "chargingSchedule": {
                        "$ref": "#/components/schemas/chargingSchedule"
                    }
                }
            },
            "dataTransferRequest": {
                "required": [
                    "vendorId"
                ],
                "type": "object",
                "properties": {
                    "vendorId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "messageId": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "displayTextDto": {
                "type": "object",
                "properties": {
                    "language": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    }
                }
            },
            "energyMixDto": {
                "type": "object",
                "properties": {
                    "is_green_energy": {
                        "type": "boolean"
                    },
                    "energy_sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/energySourceDto"
                        }
                    },
                    "environ_impact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/environmentalImpactDto"
                        }
                    }
                }
            },
            "energySourceDto": {
                "type": "object",
                "properties": {
                    "source": {
                        "enum": [
                            "NUCLEAR",
                            "GENERAL_FOSSIL",
                            "COAL",
                            "GAS",
                            "GENERAL_GREEN",
                            "SOLAR",
                            "WIND",
                            "WATER"
                        ],
                        "type": "string",
                        "default": "NUCLEAR"
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "entityTagHeaderValue": {
                "type": "object",
                "properties": {
                    "tag": {
                        "$ref": "#/components/schemas/stringSegment"
                    },
                    "isWeak": {
                        "type": "boolean"
                    }
                }
            },
            "environmentalImpactDto": {
                "type": "object",
                "properties": {
                    "category": {
                        "enum": [
                            "NUCLEAR_WASTE",
                            "CARBON_DIOXIDE"
                        ],
                        "type": "string",
                        "default": "NUCLEAR_WASTE"
                    },
                    "amount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "exceptionalPeriodDto": {
                "type": "object",
                "properties": {
                    "period_begin": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "period_end": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "fileContentResult": {
                "type": "object",
                "properties": {
                    "fileContents": {
                        "type": "string",
                        "format": "binary"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "fileDownloadName": {
                        "type": "string"
                    },
                    "lastModified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "entityTag": {
                        "$ref": "#/components/schemas/entityTagHeaderValue"
                    },
                    "enableRangeProcessing": {
                        "type": "boolean"
                    }
                }
            },
            "geoLocationDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                }
            },
            "getCompositeScheduleRequest": {
                "required": [
                    "connectorId",
                    "duration"
                ],
                "type": "object",
                "properties": {
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargingRateUnit": {
                        "enum": [
                            "A",
                            "W"
                        ],
                        "type": "string",
                        "default": "A"
                    }
                }
            },
            "getConfigurationRequest": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "getDiagnosticsRequest": {
                "required": [
                    "location"
                ],
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "retryInterval": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "stopTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "getLocalListVersionRequest": {
                "type": "object"
            },
            "hoursDto": {
                "type": "object",
                "properties": {
                    "twentyfourseven": {
                        "type": "boolean"
                    },
                    "regular_hours": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/regularHoursDto"
                        }
                    },
                    "exceptional_openings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/exceptionalPeriodDto"
                        }
                    },
                    "exceptional_closings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/exceptionalPeriodDto"
                        }
                    }
                }
            },
            "idTagInfo": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "expiryDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "parentIdTag": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "Accepted",
                            "Blocked",
                            "Expired",
                            "Invalid",
                            "ConcurrentTx"
                        ],
                        "type": "string",
                        "default": "Accepted"
                    }
                }
            },
            "imageDto": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "thumbnail": {
                        "type": "string"
                    },
                    "category": {
                        "enum": [
                            "CHARGER",
                            "ENTRANCE",
                            "LOCATION",
                            "NETWORK",
                            "OPERATOR",
                            "OTHER",
                            "OWNER"
                        ],
                        "type": "string",
                        "default": "CHARGER"
                    },
                    "type": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "height": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "interchangeFormatCdr": {
                "type": "object",
                "properties": {
                    "cdrId": {
                        "type": "string"
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "volume": {
                        "type": "number",
                        "format": "double"
                    },
                    "chargePointAddress": {
                        "type": "string"
                    },
                    "chargePointZip": {
                        "type": "string"
                    },
                    "chargePointCity": {
                        "type": "string"
                    },
                    "chargePointCountry": {
                        "type": "string"
                    },
                    "chargePointType": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string"
                    },
                    "tariffType": {
                        "type": "string"
                    },
                    "authenticationId": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "meterId": {
                        "type": "string"
                    },
                    "obisCode": {
                        "type": "string"
                    },
                    "chargePointId": {
                        "type": "string"
                    },
                    "serviceProviderId": {
                        "type": "string"
                    },
                    "infraProviderId": {
                        "type": "string"
                    },
                    "calculatedCost": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "localTokenGroupGetDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "oucode": {
                        "type": "string"
                    },
                    "tokenGroupName": {
                        "type": "string"
                    },
                    "targetOUCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/localTokenGroupTokenGetDto"
                        }
                    },
                    "targetChargepointIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "localTokenGroupPostDto": {
                "type": "object",
                "properties": {
                    "oucode": {
                        "type": "string"
                    },
                    "tokenGroupName": {
                        "type": "string"
                    },
                    "targetOUCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/localTokenGroupTokenPostDto"
                        }
                    },
                    "targetChargepointIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "localTokenGroupPutDto": {
                "type": "object",
                "properties": {
                    "oucode": {
                        "type": "string"
                    },
                    "tokenGroupName": {
                        "type": "string"
                    },
                    "targetOUCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/localTokenGroupTokenPutDto"
                        }
                    },
                    "targetChargepointIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "localTokenGroupTokenGetDto": {
                "type": "object",
                "properties": {
                    "isValid": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "normalizedContractId": {
                        "type": "string"
                    }
                }
            },
            "localTokenGroupTokenPostDto": {
                "type": "object",
                "properties": {
                    "isValid": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    }
                }
            },
            "localTokenGroupTokenPutDto": {
                "type": "object",
                "properties": {
                    "isValid": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    }
                }
            },
            "locationChargePointDto": {
                "type": "object",
                "properties": {
                    "chargePointId": {
                        "type": "string"
                    }
                }
            },
            "locationDto": {
                "required": [
                    "id",
                    "country_code",
                    "party_id",
                    "publish",
                    "street",
                    "city",
                    "country",
                    "coordinates",
                    "time_zone",
                    "last_updated"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "publish": {
                        "type": "boolean"
                    },
                    "publish_allowed_to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/publishTokenTypeDto"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "hotline_phonenumber": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/geoLocationDto"
                    },
                    "related_locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/additionalGeoLocationDto"
                        }
                    },
                    "parking_type": {
                        "enum": [
                            "ALONG_MOTORWAY",
                            "PARKING_GARAGE",
                            "PARKING_LOT",
                            "ON_DRIVEWAY",
                            "ON_STREET",
                            "UNDERGROUND_GARAGE"
                        ],
                        "type": "string",
                        "default": "ALONG_MOTORWAY"
                    },
                    "evses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/locationEVSEDto"
                        }
                    },
                    "directions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/displayTextDto"
                        }
                    },
                    "operator": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "suboperator": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "facilities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "HOTEL",
                                "RESTAURANT",
                                "CAFE",
                                "MALL",
                                "SUPERMARKET",
                                "SPORT",
                                "RECREATION_AREA",
                                "NATURE",
                                "MUSEUM",
                                "BIKE_SHARING",
                                "BUS_STOP",
                                "TAXI_STAND",
                                "TRAM_STOP",
                                "METRO_STATION",
                                "TRAIN_STATION",
                                "AIRPORT",
                                "PARKING_LOT",
                                "CARPOOL_PARKING",
                                "FUEL_STATION",
                                "WIFI"
                            ],
                            "type": "string",
                            "default": "HOTEL"
                        }
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "opening_times": {
                        "$ref": "#/components/schemas/hoursDto"
                    },
                    "charging_when_closed": {
                        "type": "boolean"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/imageDto"
                        }
                    },
                    "energy_mix": {
                        "$ref": "#/components/schemas/energyMixDto"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "hasReimbursement": {
                        "type": "boolean"
                    },
                    "reimburseInfo": {
                        "$ref": "#/components/schemas/reimburseInfoDto"
                    },
                    "operatorId": {
                        "type": "string"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    }
                }
            },
            "locationEVSEDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "chargepointid": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "uid": {
                        "type": "string"
                    },
                    "evse_id": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "AVAILABLE",
                            "BLOCKED",
                            "CHARGING",
                            "INOPERATIVE",
                            "OUTOFORDER",
                            "PLANNED",
                            "REMOVED",
                            "RESERVED",
                            "UNKNOWN"
                        ],
                        "type": "string",
                        "default": "AVAILABLE"
                    },
                    "status_schedule": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/statusScheduleDto"
                        }
                    },
                    "capabilities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "CHARGING_PROFILE_CAPABLE",
                                "CHARGING_PREFERENCES_CAPABLE",
                                "CHIP_CARD_SUPPORT",
                                "CONTACTLESS_CARD_SUPPORT",
                                "CREDIT_CARD_PAYABLE",
                                "DEBIT_CARD_PAYABLE",
                                "PED_TERMINAL",
                                "REMOTE_START_STOP_CAPABLE",
                                "RESERVABLE",
                                "RFID_READER",
                                "TOKEN_GROUP_CAPABLE",
                                "UNLOCK_CAPABLE"
                            ],
                            "type": "string",
                            "default": "CHARGING_PROFILE_CAPABLE"
                        }
                    },
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectorDto"
                        }
                    },
                    "floor_level": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/geoLocationDto"
                    },
                    "physical_reference": {
                        "type": "string"
                    },
                    "directions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/displayTextDto"
                        }
                    },
                    "parking_restrictions": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "EV_ONLY",
                                "PLUGGED",
                                "DISABLED",
                                "CUSTOMERS",
                                "MOTORCYCLES"
                            ],
                            "type": "string",
                            "default": "EV_ONLY"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/imageDto"
                        }
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "locationPostDto": {
                "required": [
                    "id",
                    "street",
                    "city",
                    "country",
                    "coordinates",
                    "timezone"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 39,
                        "minLength": 0,
                        "type": "string",
                        "description": "The unique id of the location."
                    },
                    "street": {
                        "maxLength": 45,
                        "minLength": 0,
                        "type": "string"
                    },
                    "city": {
                        "maxLength": 45,
                        "minLength": 0,
                        "type": "string"
                    },
                    "country": {
                        "pattern": "^[A-Z]{3}$",
                        "type": "string",
                        "description": "The country code in ISO 3166-1 format."
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/geoLocationDto"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone as specified by http://www.iana.org/time-zones."
                    },
                    "publish": {
                        "type": "boolean",
                        "description": "Whether to publish this to roaming partners or not."
                    },
                    "publishAllowedTo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/publishTokenTypeDto"
                        }
                    },
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "houseNumber": {
                        "maxLength": 10,
                        "minLength": 0,
                        "type": "string"
                    },
                    "postalCode": {
                        "maxLength": 10,
                        "minLength": 0,
                        "type": "string"
                    },
                    "state": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "hotlinePhonenumber": {
                        "pattern": "^\\+[0-9]{5,15}$",
                        "type": "string"
                    },
                    "relatedLocations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/additionalGeoLocationDto"
                        }
                    },
                    "parkingType": {
                        "enum": [
                            "ALONG_MOTORWAY",
                            "PARKING_GARAGE",
                            "PARKING_LOT",
                            "ON_DRIVEWAY",
                            "ON_STREET",
                            "UNDERGROUND_GARAGE"
                        ],
                        "type": "string"
                    },
                    "evses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/locationEVSEDto"
                        }
                    },
                    "directions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/displayTextDto"
                        }
                    },
                    "operator": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "suboperator": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "facilities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "HOTEL",
                                "RESTAURANT",
                                "CAFE",
                                "MALL",
                                "SUPERMARKET",
                                "SPORT",
                                "RECREATION_AREA",
                                "NATURE",
                                "MUSEUM",
                                "BIKE_SHARING",
                                "BUS_STOP",
                                "TAXI_STAND",
                                "TRAM_STOP",
                                "METRO_STATION",
                                "TRAIN_STATION",
                                "AIRPORT",
                                "PARKING_LOT",
                                "CARPOOL_PARKING",
                                "FUEL_STATION",
                                "WIFI"
                            ],
                            "type": "string",
                            "default": "HOTEL"
                        }
                    },
                    "openingTimes": {
                        "$ref": "#/components/schemas/hoursDto"
                    },
                    "chargingWhenClosed": {
                        "type": "boolean"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/imageDto"
                        }
                    },
                    "energyMix": {
                        "$ref": "#/components/schemas/energyMixDto"
                    },
                    "hasReimbursement": {
                        "type": "boolean"
                    },
                    "reimburseInfo": {
                        "$ref": "#/components/schemas/reimburseInfoDto"
                    },
                    "operatorId": {
                        "type": "string"
                    },
                    "ou": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "ou code like 0000-0001-00001."
                    },
                    "ouId": {
                        "maxLength": 39,
                        "minLength": 0,
                        "type": "string",
                        "description": "Guid with ouId."
                    },
                    "ouName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "locationPutDto": {
                "required": [
                    "id",
                    "country_code",
                    "party_id",
                    "publish",
                    "street",
                    "city",
                    "country",
                    "coordinates",
                    "time_zone",
                    "last_updated"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "publish": {
                        "type": "boolean"
                    },
                    "publish_allowed_to": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/publishTokenTypeDto"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "hotline_phonenumber": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/geoLocationDto"
                    },
                    "related_locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/additionalGeoLocationDto"
                        }
                    },
                    "parking_type": {
                        "enum": [
                            "ALONG_MOTORWAY",
                            "PARKING_GARAGE",
                            "PARKING_LOT",
                            "ON_DRIVEWAY",
                            "ON_STREET",
                            "UNDERGROUND_GARAGE"
                        ],
                        "type": "string",
                        "default": "ALONG_MOTORWAY"
                    },
                    "evses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/locationEVSEDto"
                        }
                    },
                    "directions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/displayTextDto"
                        }
                    },
                    "operator": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "suboperator": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/businessDetailsDto"
                    },
                    "facilities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "HOTEL",
                                "RESTAURANT",
                                "CAFE",
                                "MALL",
                                "SUPERMARKET",
                                "SPORT",
                                "RECREATION_AREA",
                                "NATURE",
                                "MUSEUM",
                                "BIKE_SHARING",
                                "BUS_STOP",
                                "TAXI_STAND",
                                "TRAM_STOP",
                                "METRO_STATION",
                                "TRAIN_STATION",
                                "AIRPORT",
                                "PARKING_LOT",
                                "CARPOOL_PARKING",
                                "FUEL_STATION",
                                "WIFI"
                            ],
                            "type": "string",
                            "default": "HOTEL"
                        }
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "opening_times": {
                        "$ref": "#/components/schemas/hoursDto"
                    },
                    "charging_when_closed": {
                        "type": "boolean"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/imageDto"
                        }
                    },
                    "energy_mix": {
                        "$ref": "#/components/schemas/energyMixDto"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "hasReimbursement": {
                        "type": "boolean"
                    },
                    "reimburseInfo": {
                        "$ref": "#/components/schemas/reimburseInfoDto"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    }
                }
            },
            "locationTariffDistributionDto": {
                "required": [
                    "validFrom"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "longshipError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The error code."
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/longshipErrorDetail"
                    }
                }
            },
            "longshipErrorDetail": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Explains the error."
                    },
                    "referenceId": {
                        "type": "string",
                        "description": "When provided, use when contacting support."
                    }
                },
                "description": "More details about the error."
            },
            "messageLogDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "chargePointId": {
                        "type": "string"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "wampMessageType": {
                        "enum": [
                            "Unknown",
                            "Request",
                            "Response",
                            "Error"
                        ],
                        "type": "string",
                        "default": "Unknown"
                    },
                    "ocppMessageType": {
                        "enum": [
                            "Authorize",
                            "BootNotification",
                            "DiagnosticsStatusNotification",
                            "FirmwareStatusNotification",
                            "Heartbeat",
                            "MeterValues",
                            "Reset",
                            "StartTransaction",
                            "StatusNotification",
                            "StopTransaction",
                            "CancelReservation",
                            "ChangeAvailability",
                            "ChangeConfiguration",
                            "ClearCache",
                            "ClearCharchingProfile",
                            "GetCompositeSchedule",
                            "GetConfiguration",
                            "GetDiagnostics",
                            "GetLocalList",
                            "RemoteStartTransaction",
                            "RemoteStopTransaction",
                            "ReserveNow",
                            "SendLocalList",
                            "SetChargingProfile",
                            "TriggerMessage",
                            "UnlockConnector",
                            "UpdateFirmware",
                            "DataTransfer",
                            "TransactionEvent"
                        ],
                        "type": "string",
                        "default": "Authorize"
                    },
                    "direction": {
                        "enum": [
                            "Unknown",
                            "CpoToCharger",
                            "ChargerToCpo"
                        ],
                        "type": "string",
                        "default": "Unknown"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "organizationUnitFinancialDetailsDto": {
                "type": "object",
                "properties": {
                    "beneficiaryName": {
                        "type": "string"
                    },
                    "iban": {
                        "type": "string"
                    },
                    "bic": {
                        "type": "string"
                    }
                }
            },
            "organizationUnitGetDto": {
                "required": [
                    "id",
                    "code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ou."
                    },
                    "code": {
                        "type": "string"
                    },
                    "externalReference": {
                        "type": "string",
                        "description": "A properties which can be used to link this OU to another system."
                    },
                    "address": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "hotlinePhoneNumber": {
                        "type": "string"
                    },
                    "companyEmail": {
                        "type": "string"
                    },
                    "primaryContactperson": {
                        "type": "string"
                    },
                    "primaryContactpersonEmail": {
                        "type": "string"
                    },
                    "directPaymentProfileId": {
                        "type": "string"
                    },
                    "mspOuId": {
                        "type": "string",
                        "description": "The ou id used for the \"Msp Integration\" feature."
                    },
                    "mspOuName": {
                        "type": "string",
                        "description": "The ou name used for the \"Msp Integration\" feature."
                    },
                    "mspOuCode": {
                        "type": "string",
                        "description": "The ou code used for the \"Msp Integration\" feature."
                    },
                    "mspExternalId": {
                        "type": "string",
                        "description": "The externalId from the \"Msp Integration\" feature."
                    },
                    "financialDetails": {
                        "$ref": "#/components/schemas/organizationUnitFinancialDetailsDto"
                    }
                }
            },
            "organizationUnitPostDto": {
                "required": [
                    "parentId"
                ],
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "string",
                        "description": "The id of parent ou."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ou."
                    },
                    "externalReference": {
                        "type": "string",
                        "description": "A properties which can be used to link this OU to another system."
                    },
                    "address": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "hotlinePhoneNumber": {
                        "type": "string"
                    },
                    "companyEmail": {
                        "type": "string"
                    },
                    "primaryContactperson": {
                        "type": "string"
                    },
                    "primaryContactpersonEmail": {
                        "type": "string"
                    },
                    "mspOuId": {
                        "type": "string",
                        "description": "The ou id used for the \"Msp Integration\" feature."
                    },
                    "mspOuName": {
                        "type": "string",
                        "description": "The ou name used for the \"Msp Integration\" feature."
                    },
                    "mspOuCode": {
                        "type": "string",
                        "description": "The ou code used for the \"Msp Integration\" feature."
                    },
                    "mspExternalId": {
                        "type": "string",
                        "description": "The externalId from the \"Msp Integration\" feature."
                    },
                    "financialDetails": {
                        "$ref": "#/components/schemas/organizationUnitFinancialDetailsDto"
                    }
                }
            },
            "organizationUnitPutDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the ou."
                    },
                    "externalReference": {
                        "type": "string",
                        "description": "A properties which can be used to link this OU to another system."
                    },
                    "address": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "hotlinePhoneNumber": {
                        "type": "string"
                    },
                    "companyEmail": {
                        "type": "string"
                    },
                    "primaryContactperson": {
                        "type": "string"
                    },
                    "primaryContactpersonEmail": {
                        "type": "string"
                    },
                    "mspOuId": {
                        "type": "string",
                        "description": "The ou id used for the \"Msp Integration\" feature."
                    },
                    "mspOuName": {
                        "type": "string",
                        "description": "The ou name used for the \"Msp Integration\" feature."
                    },
                    "mspOuCode": {
                        "type": "string",
                        "description": "The ou code used for the \"Msp Integration\" feature."
                    },
                    "mspExternalId": {
                        "type": "string",
                        "description": "The externalId from the \"Msp Integration\" feature."
                    },
                    "financialDetails": {
                        "$ref": "#/components/schemas/organizationUnitFinancialDetailsDto"
                    }
                }
            },
            "priceInfoDto": {
                "type": "object",
                "properties": {
                    "startPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "energyPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalParkingTimeInMinutes": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalParkingTimeSteps": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parkingTimePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalChargingTimeInMinutes": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalChargingTimeSteps": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargingTimePrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "privateEmpTariffDto": {
                "type": "object",
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "powerType": {
                        "enum": [
                            "AC",
                            "DC"
                        ],
                        "type": "string",
                        "default": "AC"
                    },
                    "usePublicTariffWhenKwhIsCheaper": {
                        "type": "boolean"
                    }
                }
            },
            "publishTokenTypeDto": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "RFID",
                            "AD_HOC_USER",
                            "APP_USER",
                            "OTHER"
                        ],
                        "type": "string",
                        "default": "RFID"
                    },
                    "visual_number": {
                        "type": "string"
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "group_id": {
                        "type": "string"
                    }
                }
            },
            "regularHoursDto": {
                "type": "object",
                "properties": {
                    "weekday": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "period_begin": {
                        "type": "string"
                    },
                    "period_end": {
                        "type": "string"
                    }
                }
            },
            "reimburseInfoDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "ORGANIZATIONUNIT",
                            "TOKEN",
                            "NONE"
                        ],
                        "type": "string",
                        "default": "ORGANIZATIONUNIT"
                    },
                    "hasGuestUsage": {
                        "type": "boolean"
                    },
                    "hasGuestChargingReimbursementFee": {
                        "type": "boolean"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "partyId": {
                        "type": "string"
                    },
                    "externalOrganizationUnitId": {
                        "type": "string"
                    },
                    "externalOrganizationUnitName": {
                        "type": "string"
                    },
                    "externalOrganizationUnitReference": {
                        "type": "string"
                    },
                    "externalOrganizationUnitCode": {
                        "type": "string"
                    },
                    "chargeCardEMAID": {
                        "type": "string"
                    },
                    "chargeCardUID": {
                        "type": "string"
                    },
                    "chargeCardIssuer": {
                        "type": "string"
                    },
                    "tariffs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/reimbursementTariffDto"
                        }
                    },
                    "bankDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/reimbursementBankDetailsDto"
                        }
                    },
                    "tariffDistributionId": {
                        "type": "string"
                    },
                    "tariffDistributionHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/locationTariffDistributionDto"
                        }
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    }
                }
            },
            "reimbursementBankDetailsDto": {
                "type": "object",
                "properties": {
                    "bankaccount": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "reimbursementCdrDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "chargePointId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "evseId": {
                        "type": "string"
                    },
                    "location": {
                        "$ref": "#/components/schemas/reimbursementCdrLocationDto"
                    },
                    "startDatetime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "startedByInfo": {
                        "$ref": "#/components/schemas/reimburseStartedByInfoDto"
                    },
                    "meterStartInWh": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "meterStopInWh": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalEnergyInKwh": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalTimeInHours": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    },
                    "reimburseTariffId": {
                        "type": "string"
                    },
                    "reimburseTariffName": {
                        "type": "string"
                    },
                    "reimburseTariffPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "reimburseTariffCalculated": {
                        "type": "boolean"
                    },
                    "reimbursePriceCalculatedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "bankAccount": {
                        "type": "string"
                    },
                    "bankAccountCreatedOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "bankAccountValidFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "reimburseTariffOriginalPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "hasGuestChargingReimbursementFee": {
                        "type": "boolean"
                    },
                    "reimburseTenantFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "tenantFeeCalculated": {
                        "type": "boolean"
                    },
                    "tariffDistributionId": {
                        "type": "string"
                    },
                    "priceInfo": {
                        "$ref": "#/components/schemas/priceInfoDto"
                    },
                    "customerShare": {
                        "type": "number",
                        "format": "double"
                    },
                    "energyCompensation": {
                        "type": "number",
                        "format": "double"
                    },
                    "reimbursementCustomerShare": {
                        "$ref": "#/components/schemas/reimbursementCustomerShareDto"
                    },
                    "localStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "localEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "reimbursementCdrGeoLocationDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                }
            },
            "reimbursementCdrLocationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "evseId": {
                        "type": "string"
                    },
                    "powerType": {
                        "enum": [
                            "AC_1_PHASE",
                            "AC_3_PHASE",
                            "DC"
                        ],
                        "type": "string",
                        "default": "AC_1_PHASE"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "hotline_phonenumber": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/reimbursementCdrGeoLocationDto"
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "hasReimbursement": {
                        "type": "boolean"
                    }
                }
            },
            "reimbursementCustomerShareDto": {
                "type": "object",
                "properties": {
                    "customerShare": {
                        "type": "number",
                        "format": "double"
                    },
                    "energyCompensation": {
                        "type": "number",
                        "format": "double"
                    },
                    "tenantFee": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "reimbursementPriceDto": {
                "type": "object",
                "properties": {
                    "excl_vat": {
                        "type": "number",
                        "format": "double"
                    },
                    "incl_vat": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "reimbursementTariffDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "price": {
                        "$ref": "#/components/schemas/reimbursementPriceDto"
                    },
                    "status": {
                        "enum": [
                            "PENDING",
                            "APPROVED",
                            "REJECTED"
                        ],
                        "type": "string",
                        "default": "PENDING"
                    }
                }
            },
            "reimburseStartedByInfoDto": {
                "type": "object",
                "properties": {
                    "idTag": {
                        "type": "string"
                    },
                    "tokenInfo": {
                        "$ref": "#/components/schemas/reimburseStartedByTokenDto"
                    },
                    "authorizationState": {
                        "enum": [
                            "ApprovedByRemote",
                            "ApprovedByLocalToken",
                            "ApprovedByAllowAny",
                            "ApprovedByRoamingPartner",
                            "ApprovedByAuthRequest",
                            "WaitingForRemoteStop",
                            "ErrorUnkownRemoteToken",
                            "ErrorInvalidLocalToken",
                            "ErrorNoLocalOrRemoteApproval",
                            "ErrorNoRoamingApproval"
                        ],
                        "type": "string",
                        "default": "ApprovedByRemote"
                    },
                    "isGuestUsage": {
                        "type": "boolean"
                    }
                }
            },
            "reimburseStartedByTokenDto": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string"
                    },
                    "authReference": {
                        "type": "string"
                    },
                    "tokenType": {
                        "enum": [
                            "AD_HOC_USER",
                            "APP_USER",
                            "OTHER",
                            "RFID"
                        ],
                        "type": "string",
                        "default": "AD_HOC_USER"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "authMethod": {
                        "enum": [
                            "AUTH_REQUEST",
                            "COMMAND",
                            "WHITELIST"
                        ],
                        "type": "string",
                        "default": "AUTH_REQUEST"
                    },
                    "providerCountryCode": {
                        "type": "string"
                    },
                    "providerPartyId": {
                        "type": "string"
                    },
                    "tokenOUId": {
                        "type": "string"
                    },
                    "tokenOUName": {
                        "type": "string"
                    },
                    "tokenOU": {
                        "type": "string"
                    }
                }
            },
            "remoteStartTransactionRequest": {
                "required": [
                    "idTag"
                ],
                "type": "object",
                "properties": {
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "idTag": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "chargingProfile": {
                        "$ref": "#/components/schemas/chargingProfile"
                    }
                }
            },
            "remoteStopTransactionRequest": {
                "required": [
                    "transactionId"
                ],
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "reserveNowRequest": {
                "required": [
                    "connectorId",
                    "expiryDate",
                    "idTag",
                    "reservationId"
                ],
                "type": "object",
                "properties": {
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "expiryDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "idTag": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "parentIdTag": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string"
                    },
                    "reservationId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "resetRequest": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Hard",
                            "Soft"
                        ],
                        "type": "string",
                        "default": "Hard"
                    }
                }
            },
            "sendLocalListRequest": {
                "required": [
                    "listVersion",
                    "updateType"
                ],
                "type": "object",
                "properties": {
                    "listVersion": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "localAuthorizationList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/authorizationData"
                        }
                    },
                    "updateType": {
                        "enum": [
                            "Differential",
                            "Full"
                        ],
                        "type": "string",
                        "default": "Differential"
                    }
                }
            },
            "sessionDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "chargePointId": {
                        "type": "string"
                    },
                    "transactionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ocppTransactionId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sessionLocation": {
                        "$ref": "#/components/schemas/sessionLocationDto"
                    },
                    "idTag": {
                        "type": "string"
                    },
                    "startedByInfo": {
                        "$ref": "#/components/schemas/startedByInfoDto"
                    },
                    "meterStartInWh": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sessionStart": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "chargingPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chargingPeriodDto"
                        }
                    },
                    "chargingMeterValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chargingMeterValueDto"
                        }
                    },
                    "meterStopInWh": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sessionStop": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "enum": [
                            "ACTIVE",
                            "COMPLETED",
                            "INVALID",
                            "PENDING",
                            "RESERVATION"
                        ],
                        "type": "string",
                        "default": "ACTIVE"
                    },
                    "totalEnergyInKwh": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ou": {
                        "type": "string"
                    },
                    "ouId": {
                        "type": "string"
                    },
                    "ouName": {
                        "type": "string"
                    },
                    "tariffInfo": {
                        "$ref": "#/components/schemas/tariffInfoDto"
                    },
                    "priceInfo": {
                        "$ref": "#/components/schemas/priceInfoDto"
                    },
                    "tariffId": {
                        "type": "string"
                    },
                    "tariffName": {
                        "type": "string"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "tariffPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingStepSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "delayInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "sessionGeoLocationDto": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string"
                    },
                    "longitude": {
                        "type": "string"
                    }
                }
            },
            "sessionLocationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "evseId": {
                        "type": "string"
                    },
                    "powerType": {
                        "enum": [
                            "AC_1_PHASE",
                            "AC_3_PHASE",
                            "DC"
                        ],
                        "type": "string",
                        "default": "AC_1_PHASE"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "houseNumber": {
                        "type": "string"
                    },
                    "street": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "postal_code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "hotline_phonenumber": {
                        "type": "string"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/sessionGeoLocationDto"
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "hasReimbursement": {
                        "type": "boolean"
                    }
                }
            },
            "setChargingProfileRequest": {
                "required": [
                    "connectorId",
                    "csChargingProfiles"
                ],
                "type": "object",
                "properties": {
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "csChargingProfiles": {
                        "$ref": "#/components/schemas/csChargingProfiles"
                    }
                }
            },
            "startedByInfoDto": {
                "type": "object",
                "properties": {
                    "tokenInfo": {
                        "$ref": "#/components/schemas/startedByTokenDto"
                    },
                    "roamingPlatformType": {
                        "enum": [
                            "Hubject",
                            "Ocpi"
                        ],
                        "type": "string",
                        "default": "Hubject"
                    },
                    "authorizationState": {
                        "enum": [
                            "ApprovedByRemote",
                            "ApprovedByLocalToken",
                            "ApprovedByAllowAny",
                            "ApprovedByRoamingPartner",
                            "ApprovedByAuthRequest",
                            "WaitingForRemoteStop",
                            "ErrorUnkownRemoteToken",
                            "ErrorInvalidLocalToken",
                            "ErrorNoLocalOrRemoteApproval",
                            "ErrorNoRoamingApproval"
                        ],
                        "type": "string",
                        "default": "ApprovedByRemote"
                    },
                    "roamingPlatformConnectionId": {
                        "type": "string"
                    },
                    "isGuestUsage": {
                        "type": "boolean"
                    }
                }
            },
            "startedByTokenDto": {
                "type": "object",
                "properties": {
                    "uid": {
                        "type": "string"
                    },
                    "authReference": {
                        "type": "string"
                    },
                    "tokenType": {
                        "enum": [
                            "AD_HOC_USER",
                            "APP_USER",
                            "OTHER",
                            "RFID"
                        ],
                        "type": "string",
                        "default": "AD_HOC_USER"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "authMethod": {
                        "enum": [
                            "AUTH_REQUEST",
                            "COMMAND",
                            "WHITELIST"
                        ],
                        "type": "string",
                        "default": "AUTH_REQUEST"
                    },
                    "providerCountryCode": {
                        "type": "string"
                    },
                    "providerPartyId": {
                        "type": "string"
                    },
                    "tokenOUId": {
                        "type": "string"
                    },
                    "tokenOUName": {
                        "type": "string"
                    },
                    "tokenOU": {
                        "type": "string"
                    }
                }
            },
            "statusScheduleDto": {
                "type": "object",
                "properties": {
                    "period_begin": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "period_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "enum": [
                            "AVAILABLE",
                            "BLOCKED",
                            "CHARGING",
                            "INOPERATIVE",
                            "OUTOFORDER",
                            "PLANNED",
                            "REMOVED",
                            "RESERVED",
                            "UNKNOWN"
                        ],
                        "type": "string",
                        "default": "AVAILABLE"
                    }
                }
            },
            "stringSegment": {
                "type": "object",
                "properties": {
                    "buffer": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "length": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "string"
                    },
                    "hasValue": {
                        "type": "boolean"
                    }
                }
            },
            "tariffAssertionDto": {
                "type": "object",
                "properties": {
                    "tariffType": {
                        "enum": [
                            "ReimbursementTariff",
                            "PrivateTariff",
                            "SellTariff",
                            "DefaultTariff"
                        ],
                        "type": "string",
                        "default": "ReimbursementTariff"
                    },
                    "isTariffUsed": {
                        "type": "boolean"
                    },
                    "tariffResult": {
                        "type": "string"
                    }
                }
            },
            "tariffDistributionGetDto": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "energyCompensation": {
                        "type": "number",
                        "format": "double"
                    },
                    "fixedTenantKWhFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeCustomer": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeTenant": {
                        "type": "number",
                        "format": "double"
                    },
                    "priceHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tariffDistributionHistoryDto"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "tariffDistributionHistoryDto": {
                "type": "object",
                "properties": {
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "energyCompensation": {
                        "type": "number",
                        "format": "double"
                    },
                    "fixedTenantKWhFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeCustomer": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeTenant": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "tariffDistributionPostDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "energyCompensation": {
                        "type": "number",
                        "format": "double"
                    },
                    "fixedTenantKWhFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeCustomer": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeTenant": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "tariffDistributionPutDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "energyCompensation": {
                        "type": "number",
                        "format": "double"
                    },
                    "fixedTenantKWhFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeCustomer": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentageFeeTenant": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "tariffDto": {
                "required": [
                    "tenantId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "ocpiId": {
                        "type": "string"
                    },
                    "hubjectId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    },
                    "priceInclVat": {
                        "type": "number",
                        "format": "double"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "usageType": {
                        "enum": [
                            "SELL",
                            "BUY",
                            "REIMBURSE",
                            "SELLPRIVATE",
                            "DEFAULT"
                        ],
                        "type": "string",
                        "default": "SELL"
                    },
                    "tariffType": {
                        "enum": [
                            "AD_HOC_PAYMENT",
                            "REGULAR"
                        ],
                        "type": "string",
                        "default": "AD_HOC_PAYMENT"
                    },
                    "vat": {
                        "type": "number",
                        "format": "double"
                    },
                    "isVatRelevant": {
                        "type": "boolean"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "party_id": {
                        "type": "string"
                    },
                    "locationId": {
                        "type": "string"
                    },
                    "isPrivateEmpTariff": {
                        "type": "boolean"
                    },
                    "privateEmpTariff": {
                        "$ref": "#/components/schemas/privateEmpTariffDto"
                    },
                    "parkingTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parkingGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "timeStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "priceHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tariffPriceDto"
                        }
                    },
                    "externalReference": {
                        "type": "string"
                    }
                }
            },
            "tariffInfoDto": {
                "type": "object",
                "properties": {
                    "tariffId": {
                        "type": "string"
                    },
                    "tariffName": {
                        "type": "string"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "tariffPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parkingGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "timeStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "assertions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tariffAssertionDto"
                        }
                    }
                }
            },
            "tariffPostDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "usageType": {
                        "enum": [
                            "SELL",
                            "BUY",
                            "REIMBURSE",
                            "SELLPRIVATE",
                            "DEFAULT"
                        ],
                        "type": "string",
                        "default": "SELL"
                    },
                    "privateEmpTariff": {
                        "$ref": "#/components/schemas/privateEmpTariffDto"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parkingGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "timeStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalReference": {
                        "type": "string"
                    }
                }
            },
            "tariffPriceDto": {
                "type": "object",
                "properties": {
                    "createdTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "pricePerKwh": {
                        "type": "number",
                        "format": "double"
                    },
                    "pricePerKwhInclVat": {
                        "type": "number",
                        "format": "double"
                    },
                    "isVatRelevant": {
                        "type": "boolean"
                    },
                    "parkingTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parkingGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "timeStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "approvalStatus": {
                        "enum": [
                            "PENDING",
                            "APPROVED",
                            "REJECTED"
                        ],
                        "type": "string",
                        "default": "PENDING"
                    }
                }
            },
            "tariffPutDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "hubjectId": {
                        "type": "string"
                    },
                    "privateEmpTariff": {
                        "$ref": "#/components/schemas/privateEmpTariffDto"
                    },
                    "startTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "parkingStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parkingGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeTariff": {
                        "type": "number",
                        "format": "double"
                    },
                    "timeStepSizeInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeGracePeriodInMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalReference": {
                        "type": "string"
                    }
                }
            },
            "triggerMessageRequest": {
                "required": [
                    "requestedMessage"
                ],
                "type": "object",
                "properties": {
                    "requestedMessage": {
                        "enum": [
                            "BootNotification",
                            "DiagnosticsStatusNotification",
                            "FirmwareStatusNotification",
                            "Heartbeat",
                            "MeterValues",
                            "StatusNotification"
                        ],
                        "type": "string",
                        "default": "BootNotification"
                    },
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "unlockConnectorRequest": {
                "required": [
                    "connectorId"
                ],
                "type": "object",
                "properties": {
                    "connectorId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "updateFirmwareRequest": {
                "required": [
                    "location",
                    "retrieveDate"
                ],
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string"
                    },
                    "retries": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "retrieveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "retryInterval": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "webhookGetDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "SESSION_START",
                                "PING",
                                "SESSION_STOP",
                                "SESSION_UPDATE",
                                "OPERATIONAL_STATUS",
                                "CONNECTIVITY_STATUS",
                                "CHARGEPOINT_BOOTED"
                            ],
                            "type": "string",
                            "default": "SESSION_START"
                        }
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookHeaderDto"
                        }
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "webhookHeaderDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "webhookPostDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "SESSION_START",
                                "PING",
                                "SESSION_STOP",
                                "SESSION_UPDATE",
                                "OPERATIONAL_STATUS",
                                "CONNECTIVITY_STATUS",
                                "CHARGEPOINT_BOOTED"
                            ],
                            "type": "string",
                            "default": "SESSION_START"
                        }
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookHeaderDto"
                        }
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "webhookPutDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ouCode": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "SESSION_START",
                                "PING",
                                "SESSION_STOP",
                                "SESSION_UPDATE",
                                "OPERATIONAL_STATUS",
                                "CONNECTIVITY_STATUS",
                                "CHARGEPOINT_BOOTED"
                            ],
                            "type": "string",
                            "default": "SESSION_START"
                        }
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/webhookHeaderDto"
                        }
                    }
                }
            },
            "webhookSummaryGetDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "eventTypes": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "SESSION_START",
                                "PING",
                                "SESSION_STOP",
                                "SESSION_UPDATE",
                                "OPERATIONAL_STATUS",
                                "CONNECTIVITY_STATUS",
                                "CHARGEPOINT_BOOTED"
                            ],
                            "type": "string",
                            "default": "SESSION_START"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "webhookSummaryGetDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/webhookSummaryGetDto"
                }
            },
            "tariffDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/tariffDto"
                }
            },
            "tariffDistributionGetDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/tariffDistributionGetDto"
                }
            },
            "sessionDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/sessionDto"
                }
            },
            "reimbursementCdrDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/reimbursementCdrDto"
                }
            },
            "organizationUnitGetDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/organizationUnitGetDto"
                }
            },
            "locationDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/locationDto"
                }
            },
            "localTokenGroupGetDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/localTokenGroupGetDto"
                }
            },
            "chargepointDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/chargepointDto"
                }
            },
            "messageLogDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/messageLogDto"
                }
            },
            "chargepointStatusDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/chargepointStatusDto"
                }
            },
            "interchangeFormatCdrArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/interchangeFormatCdr"
                }
            },
            "cdrDtoArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/cdrDto"
                }
            }
        },
        "securitySchemes": {
            "tenantKey": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "applicationKey": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "tenantKey": []
        },
        {
            "applicationKey": []
        }
    ]
}